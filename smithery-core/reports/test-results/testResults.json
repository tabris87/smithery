{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2020-09-28T20:07:53.585Z",
    "end": "2020-09-28T20:07:53.650Z",
    "duration": 65,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c0a462a0-7fb0-48c2-beb5-001247a78bd1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e20bbfa3-aeb5-41d2-aeee-5598a68be196",
          "title": "Check the GeneratorFactory",
          "fullFile": "E:\\smithery-tooling\\smithery\\smithery-core\\src\\Generator.spec.ts",
          "file": "\\src\\Generator.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GenFactory should be fine after creation",
              "fullTitle": "Check the GeneratorFactory GenFactory should be fine after creation",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(new Generator_1.GeneratorFactory()).not.to.be.undefined;",
              "err": {},
              "uuid": "3d207ae3-314f-4e57-b200-fb25ca02a5f4",
              "parentUUID": "e20bbfa3-aeb5-41d2-aeee-5598a68be196",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GeneratorFactory should contain at least the \"File\" and \"Folder\" generators.",
              "fullTitle": "Check the GeneratorFactory GeneratorFactory should contain at least the \"File\" and \"Folder\" generators.",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const genFact = new Generator_1.GeneratorFactory();\nchai_1.expect(genFact.getGenerator(enums_1.FileType.File)).not.to.be.undefined;\nchai_1.expect(genFact.getGenerator(enums_1.FileType.Folder)).not.to.be.undefined;",
              "err": {},
              "uuid": "e090e9e0-0787-4177-851a-684c8069bd32",
              "parentUUID": "e20bbfa3-aeb5-41d2-aeee-5598a68be196",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d207ae3-314f-4e57-b200-fb25ca02a5f4",
            "e090e9e0-0787-4177-851a-684c8069bd32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b80cdd0c-6bce-45cd-83a6-78f576731055",
          "title": "Check the ParserFactory",
          "fullFile": "E:\\smithery-tooling\\smithery\\smithery-core\\src\\Parser.spec.ts",
          "file": "\\src\\Parser.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "ParserFactory should be fine after creation",
              "fullTitle": "Check the ParserFactory ParserFactory should be fine after creation",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(new Parser_1.ParserFactory()).not.to.be.undefined;",
              "err": {},
              "uuid": "a2401419-d024-4b19-a3e3-83f7bde8511e",
              "parentUUID": "b80cdd0c-6bce-45cd-83a6-78f576731055",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GeneratorFactory should contain at least the \"File\" and \"Folder\" generators.",
              "fullTitle": "Check the ParserFactory GeneratorFactory should contain at least the \"File\" and \"Folder\" generators.",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const parseFact = new Parser_1.ParserFactory();\nchai_1.expect(parseFact.getParser(enums_1.FileType.File)).not.to.be.undefined;\nchai_1.expect(parseFact.getParser(enums_1.FileType.Folder)).not.to.be.undefined;",
              "err": {},
              "uuid": "0e0c4cef-06b5-472d-b074-960d186aa590",
              "parentUUID": "b80cdd0c-6bce-45cd-83a6-78f576731055",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2401419-d024-4b19-a3e3-83f7bde8511e",
            "0e0c4cef-06b5-472d-b074-960d186aa590"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "reports/test-results",
        "reportFilename": "testResults"
      },
      "version": "5.1.0"
    }
  }
}