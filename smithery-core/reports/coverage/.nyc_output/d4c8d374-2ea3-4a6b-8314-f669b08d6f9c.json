{"E:\\smithery-tooling\\smithery\\smithery-core\\src\\enums.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\enums.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":59}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":34}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":21},"end":{"line":8,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":14},"end":{"line":8,"column":57}},"type":"binary-expr","locations":[{"start":{"line":8,"column":14},"end":{"line":8,"column":30}},{"start":{"line":8,"column":35},"end":{"line":8,"column":56}}],"line":8}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0},"f":{"0":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/enums.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/enums.ts"],"names":[],"mappings":";;;AAAA,IAAY,QAGX;AAHD,WAAY,QAAQ;IAClB,6BAAiB,CAAA;IACjB,yBAAa,CAAA;AACf,CAAC,EAHW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAGnB","sourcesContent":["export enum FileType {\n  Folder = 'Folder',\n  File = 'File',\n}\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Generator.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Generator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":32}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":38}},"6":{"start":{"line":19,"column":29},"end":{"line":19,"column":66}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":63}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":65}},"9":{"start":{"line":30,"column":8},"end":{"line":30,"column":71}},"10":{"start":{"line":38,"column":8},"end":{"line":38,"column":66}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":14,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":29},"end":{"line":22,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":46},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":40},"end":{"line":39,"column":5}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":37,"column":17},"end":{"line":37,"column":38}},"type":"default-arg","locations":[{"start":{"line":37,"column":36},"end":{"line":37,"column":38}}],"line":37}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/Generator.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/Generator.ts"],"names":[],"mappings":";;;AAAA,6CAAkD;AAElD,mCAAmC;AAEnC;;;GAGG;AACH,MAAa,gBAAgB;IAG3B;QAFQ,kBAAa,GAAkC,EAAE,CAAC;QAGxD,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED;;OAEG;IACK,sBAAsB;QAC5B,MAAM,YAAY,GAAG,IAAI,+BAAkB,EAAE,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,gBAAQ,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,gBAAQ,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAED;;;;;OAKG;IACI,YAAY,CAAC,SAAqB,EAAE,gBAAwB;QACjE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,GAAG,SAAS,CAAC;IACjE,CAAC;IAED;;;;OAIG;IACI,YAAY,CAAC,mBAA2B,EAAE;QAC/C,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC;IAC5D,CAAC;CACF;AAlCD,4CAkCC","sourcesContent":["import { DirectoryGenerator } from './generators';\nimport { IGenerator } from './Interfaces';\nimport { FileType } from './enums';\n\n/**\n * GeneratorFactory, the factory implementation for the set of generators\n * to deliver the correct generator implementation for each type of source code\n */\nexport class GeneratorFactory {\n  private _generatorMap: { [key: string]: IGenerator } = {};\n\n  constructor() {\n    this._loadDefaultGenerators();\n  }\n\n  /**\n   * Used at the constructor to load the directory generator for files and folders\n   */\n  private _loadDefaultGenerators(): void {\n    const dirGenerator = new DirectoryGenerator();\n    this.addGenerator(dirGenerator, FileType.File);\n    this.addGenerator(dirGenerator, FileType.Folder);\n  }\n\n  /**\n   * Add a new generator instance together with the correct source code assignment\n   *\n   * @param generator the generator instance to add\n   * @param sourceAssignment the source code type to distinguish between other generators\n   */\n  public addGenerator(generator: IGenerator, sourceAssignment: string): void {\n    this._generatorMap[sourceAssignment.toUpperCase()] = generator;\n  }\n\n  /**\n   * Retrieve a code generator for a given code type\n   *\n   * @param sourceAssignment the identifier (file ending) for which type of source code the generator is needed\n   */\n  public getGenerator(sourceAssignment: string = \"\"): IGenerator | undefined {\n    return this._generatorMap[sourceAssignment.toUpperCase()];\n  }\n}\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\generators\\DirectoryGenerator.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\generators\\DirectoryGenerator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":26}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"5":{"start":{"line":15,"column":22},"end":{"line":15,"column":97}},"6":{"start":{"line":16,"column":23},"end":{"line":16,"column":36}},"7":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"8":{"start":{"line":18,"column":12},"end":{"line":18,"column":46}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":22}},"10":{"start":{"line":30,"column":8},"end":{"line":40,"column":9}},"11":{"start":{"line":31,"column":12},"end":{"line":39,"column":13}},"12":{"start":{"line":32,"column":16},"end":{"line":32,"column":69}},"13":{"start":{"line":33,"column":16},"end":{"line":33,"column":95}},"14":{"start":{"line":36,"column":16},"end":{"line":38,"column":17}},"15":{"start":{"line":37,"column":20},"end":{"line":37,"column":92}},"16":{"start":{"line":43,"column":0},"end":{"line":43,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":28},"end":{"line":22,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":48},"end":{"line":41,"column":5}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":22},"end":{"line":15,"column":97}},"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":89}},{"start":{"line":15,"column":94},"end":{"line":15,"column":97}}],"line":15},"1":{"loc":{"start":{"line":15,"column":23},"end":{"line":15,"column":89}},"type":"cond-expr","locations":[{"start":{"line":15,"column":64},"end":{"line":15,"column":70}},{"start":{"line":15,"column":73},"end":{"line":15,"column":89}}],"line":15},"2":{"loc":{"start":{"line":15,"column":23},"end":{"line":15,"column":61}},"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":39}},{"start":{"line":15,"column":43},"end":{"line":15,"column":61}}],"line":15},"3":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17},"4":{"loc":{"start":{"line":31,"column":12},"end":{"line":39,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":39,"column":13}},{"start":{"line":31,"column":12},"end":{"line":39,"column":13}}],"line":31},"5":{"loc":{"start":{"line":33,"column":35},"end":{"line":33,"column":55}},"type":"binary-expr","locations":[{"start":{"line":33,"column":35},"end":{"line":33,"column":49}},{"start":{"line":33,"column":53},"end":{"line":33,"column":55}}],"line":33},"6":{"loc":{"start":{"line":36,"column":16},"end":{"line":38,"column":17}},"type":"if","locations":[{"start":{"line":36,"column":16},"end":{"line":38,"column":17}},{"start":{"line":36,"column":16},"end":{"line":38,"column":17}}],"line":36},"7":{"loc":{"start":{"line":36,"column":20},"end":{"line":36,"column":57}},"type":"binary-expr","locations":[{"start":{"line":36,"column":20},"end":{"line":36,"column":33}},{"start":{"line":36,"column":37},"end":{"line":36,"column":57}}],"line":36}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/generators/DirectoryGenerator.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/generators/DirectoryGenerator.ts"],"names":[],"mappings":";;;AAEA,oCAAoC;AAEpC,2BAA8C;AAC9C,+BAA4B;AAE5B;;GAEG;AACH,MAAa,kBAAkB;IAC7B;;OAEG;IACI,QAAQ,CAAC,IAAU,EAAE,OAA8B;QACxD,MAAM,KAAK,GAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,KAAI,GAAG,CAAC;QAEvC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACnC;QACD,+EAA+E;QAC/E,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACK,aAAa,CAAC,eAAuB,EAAE,WAAmB;QAChE,KAAK,MAAM,KAAK,IAAI,eAAe,EAAE;YACnC,IAAI,KAAK,CAAC,IAAI,KAAK,gBAAQ,CAAC,MAAM,EAAE;gBAClC,cAAS,CAAC,WAAI,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,IAAI,EAAE,EAAE,WAAI,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;aACzE;iBAAM;gBACL,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,EAAE;oBACzC,kBAAa,CAAC,WAAI,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;iBAC7D;aACF;SACF;IACH,CAAC;CACF;AAjCD,gDAiCC","sourcesContent":["import { IGenerator} from '../Interfaces';\nimport { Node } from '../utils/Node';\nimport { FileType } from '../enums';\n\nimport { mkdirSync, writeFileSync } from 'fs';\nimport { join } from 'path';\n\n/**\n * Implementation of the Generator interface to generate files and directories\n */\nexport class DirectoryGenerator implements IGenerator {\n  /**\n   * @override\n   */\n  public generate(oAST: Node, options?: { filePath: string }): string {\n    const route = options?.filePath || '.';\n\n    const aItems = oAST.children;\n    if (aItems) {\n      this._processFiles(aItems, route);\n    }\n    // Sry for this, but it is the only class not delivering a correct source code.\n    return 'Done';\n  }\n\n  /**\n   * Recursive file and folder generation\n   *\n   * @param aNodesToProcess the tree nodes to process\n   * @param sTargetPath the path of the parent element\n   */\n  private _processFiles(aNodesToProcess: Node[], sTargetPath: string) {\n    for (const oNode of aNodesToProcess) {\n      if (oNode.type === FileType.Folder) {\n        mkdirSync(join(sTargetPath, oNode.name));\n        this._processFiles(oNode.children || [], join(sTargetPath, oNode.name));\n      } else {\n        if (oNode.content && oNode.content !== '') {\n          writeFileSync(join(sTargetPath, oNode.name), oNode.content);\n        }\n      }\n    }\n  }\n}\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\generators\\index.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\generators\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":27},"end":{"line":4,"column":58}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":145}},"4":{"start":{"line":5,"column":92},"end":{"line":5,"column":139}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":78},"end":{"line":5,"column":79}},"loc":{"start":{"line":5,"column":90},"end":{"line":5,"column":141}},"line":5}},"branchMap":{},"s":{"0":0,"1":0,"2":0,"3":0,"4":0},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/generators/index.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/generators/index.ts"],"names":[],"mappings":";;;AAAA,2DAA0D;AAAjD,wHAAA,kBAAkB,OAAA","sourcesContent":["export { DirectoryGenerator } from './DirectoryGenerator';\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Imposer.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Imposer.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":36}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":42}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":29}},"5":{"start":{"line":11,"column":22},"end":{"line":11,"column":71}},"6":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"7":{"start":{"line":13,"column":12},"end":{"line":13,"column":58}},"8":{"start":{"line":20,"column":25},"end":{"line":20,"column":80}},"9":{"start":{"line":20,"column":61},"end":{"line":20,"column":79}},"10":{"start":{"line":21,"column":8},"end":{"line":26,"column":11}},"11":{"start":{"line":22,"column":26},"end":{"line":22,"column":53}},"12":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"13":{"start":{"line":24,"column":16},"end":{"line":24,"column":42}},"14":{"start":{"line":27,"column":24},"end":{"line":27,"column":39}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":53}},"16":{"start":{"line":35,"column":26},"end":{"line":35,"column":51}},"17":{"start":{"line":37,"column":8},"end":{"line":116,"column":11}},"18":{"start":{"line":38,"column":31},"end":{"line":38,"column":48}},"19":{"start":{"line":39,"column":34},"end":{"line":39,"column":54}},"20":{"start":{"line":40,"column":34},"end":{"line":40,"column":36}},"21":{"start":{"line":41,"column":12},"end":{"line":115,"column":13}},"22":{"start":{"line":42,"column":16},"end":{"line":97,"column":19}},"23":{"start":{"line":43,"column":20},"end":{"line":43,"column":64}},"24":{"start":{"line":44,"column":39},"end":{"line":44,"column":41}},"25":{"start":{"line":45,"column":41},"end":{"line":53,"column":22}},"26":{"start":{"line":46,"column":24},"end":{"line":52,"column":25}},"27":{"start":{"line":47,"column":28},"end":{"line":47,"column":51}},"28":{"start":{"line":48,"column":28},"end":{"line":48,"column":40}},"29":{"start":{"line":51,"column":28},"end":{"line":51,"column":41}},"30":{"start":{"line":55,"column":20},"end":{"line":58,"column":21}},"31":{"start":{"line":56,"column":24},"end":{"line":56,"column":71}},"32":{"start":{"line":57,"column":24},"end":{"line":57,"column":56}},"33":{"start":{"line":60,"column":20},"end":{"line":72,"column":21}},"34":{"start":{"line":61,"column":41},"end":{"line":61,"column":56}},"35":{"start":{"line":62,"column":24},"end":{"line":62,"column":70}},"36":{"start":{"line":63,"column":50},"end":{"line":63,"column":95}},"37":{"start":{"line":64,"column":24},"end":{"line":69,"column":25}},"38":{"start":{"line":65,"column":28},"end":{"line":65,"column":88}},"39":{"start":{"line":68,"column":28},"end":{"line":68,"column":68}},"40":{"start":{"line":71,"column":24},"end":{"line":71,"column":62}},"41":{"start":{"line":73,"column":20},"end":{"line":96,"column":21}},"42":{"start":{"line":74,"column":24},"end":{"line":74,"column":135}},"43":{"start":{"line":75,"column":24},"end":{"line":75,"column":40}},"44":{"start":{"line":76,"column":24},"end":{"line":76,"column":62}},"45":{"start":{"line":77,"column":24},"end":{"line":77,"column":62}},"46":{"start":{"line":78,"column":24},"end":{"line":78,"column":65}},"47":{"start":{"line":79,"column":24},"end":{"line":79,"column":40}},"48":{"start":{"line":80,"column":24},"end":{"line":82,"column":27}},"49":{"start":{"line":81,"column":28},"end":{"line":81,"column":88}},"50":{"start":{"line":83,"column":24},"end":{"line":83,"column":43}},"51":{"start":{"line":84,"column":24},"end":{"line":84,"column":43}},"52":{"start":{"line":85,"column":50},"end":{"line":85,"column":65}},"53":{"start":{"line":86,"column":52},"end":{"line":86,"column":106}},"54":{"start":{"line":88,"column":24},"end":{"line":93,"column":25}},"55":{"start":{"line":89,"column":28},"end":{"line":89,"column":90}},"56":{"start":{"line":92,"column":28},"end":{"line":92,"column":70}},"57":{"start":{"line":95,"column":24},"end":{"line":95,"column":63}},"58":{"start":{"line":99,"column":16},"end":{"line":99,"column":72}},"59":{"start":{"line":100,"column":16},"end":{"line":100,"column":52}},"60":{"start":{"line":103,"column":16},"end":{"line":114,"column":17}},"61":{"start":{"line":104,"column":20},"end":{"line":104,"column":56}},"62":{"start":{"line":106,"column":21},"end":{"line":114,"column":17}},"63":{"start":{"line":107,"column":20},"end":{"line":107,"column":65}},"64":{"start":{"line":108,"column":20},"end":{"line":108,"column":71}},"65":{"start":{"line":110,"column":20},"end":{"line":110,"column":92}},"66":{"start":{"line":113,"column":20},"end":{"line":113,"column":65}},"67":{"start":{"line":117,"column":8},"end":{"line":117,"column":23}},"68":{"start":{"line":121,"column":8},"end":{"line":121,"column":36}},"69":{"start":{"line":124,"column":8},"end":{"line":124,"column":42}},"70":{"start":{"line":127,"column":8},"end":{"line":127,"column":29}},"71":{"start":{"line":130,"column":8},"end":{"line":130,"column":34}},"72":{"start":{"line":133,"column":8},"end":{"line":133,"column":37}},"73":{"start":{"line":136,"column":8},"end":{"line":136,"column":28}},"74":{"start":{"line":139,"column":0},"end":{"line":139,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":42},"end":{"line":9,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":45},"end":{"line":118,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":51},"end":{"line":20,"column":52}},"loc":{"start":{"line":20,"column":61},"end":{"line":20,"column":79}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":42},"end":{"line":21,"column":43}},"loc":{"start":{"line":21,"column":57},"end":{"line":26,"column":9}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":26},"end":{"line":37,"column":27}},"loc":{"start":{"line":37,"column":40},"end":{"line":116,"column":9}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":35},"end":{"line":42,"column":36}},"loc":{"start":{"line":42,"column":50},"end":{"line":97,"column":17}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":62},"end":{"line":45,"column":63}},"loc":{"start":{"line":45,"column":87},"end":{"line":53,"column":21}},"line":45},"7":{"name":"(anonymous_7)","decl":{"start":{"line":80,"column":45},"end":{"line":80,"column":46}},"loc":{"start":{"line":80,"column":63},"end":{"line":82,"column":25}},"line":80},"8":{"name":"(anonymous_8)","decl":{"start":{"line":120,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":120,"column":29},"end":{"line":122,"column":5}},"line":120},"9":{"name":"(anonymous_9)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":35},"end":{"line":125,"column":5}},"line":123},"10":{"name":"(anonymous_10)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":22},"end":{"line":128,"column":5}},"line":126},"11":{"name":"(anonymous_11)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":23},"end":{"line":131,"column":5}},"line":129},"12":{"name":"(anonymous_12)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":26},"end":{"line":134,"column":5}},"line":132},"13":{"name":"(anonymous_13)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":17},"end":{"line":137,"column":5}},"line":135}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"1":{"loc":{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":25,"column":13}},{"start":{"line":23,"column":12},"end":{"line":25,"column":13}}],"line":23},"2":{"loc":{"start":{"line":41,"column":12},"end":{"line":115,"column":13}},"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":115,"column":13}},{"start":{"line":41,"column":12},"end":{"line":115,"column":13}}],"line":41},"3":{"loc":{"start":{"line":41,"column":16},"end":{"line":41,"column":75}},"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":46}},{"start":{"line":41,"column":50},"end":{"line":41,"column":75}}],"line":41},"4":{"loc":{"start":{"line":46,"column":24},"end":{"line":52,"column":25}},"type":"if","locations":[{"start":{"line":46,"column":24},"end":{"line":52,"column":25}},{"start":{"line":46,"column":24},"end":{"line":52,"column":25}}],"line":46},"5":{"loc":{"start":{"line":46,"column":28},"end":{"line":46,"column":104}},"type":"binary-expr","locations":[{"start":{"line":46,"column":28},"end":{"line":46,"column":64}},{"start":{"line":46,"column":68},"end":{"line":46,"column":104}}],"line":46},"6":{"loc":{"start":{"line":55,"column":20},"end":{"line":58,"column":21}},"type":"if","locations":[{"start":{"line":55,"column":20},"end":{"line":58,"column":21}},{"start":{"line":55,"column":20},"end":{"line":58,"column":21}}],"line":55},"7":{"loc":{"start":{"line":60,"column":20},"end":{"line":72,"column":21}},"type":"if","locations":[{"start":{"line":60,"column":20},"end":{"line":72,"column":21}},{"start":{"line":60,"column":20},"end":{"line":72,"column":21}}],"line":60},"8":{"loc":{"start":{"line":64,"column":24},"end":{"line":69,"column":25}},"type":"if","locations":[{"start":{"line":64,"column":24},"end":{"line":69,"column":25}},{"start":{"line":64,"column":24},"end":{"line":69,"column":25}}],"line":64},"9":{"loc":{"start":{"line":73,"column":20},"end":{"line":96,"column":21}},"type":"if","locations":[{"start":{"line":73,"column":20},"end":{"line":96,"column":21}},{"start":{"line":73,"column":20},"end":{"line":96,"column":21}}],"line":73},"10":{"loc":{"start":{"line":88,"column":24},"end":{"line":93,"column":25}},"type":"if","locations":[{"start":{"line":88,"column":24},"end":{"line":93,"column":25}},{"start":{"line":88,"column":24},"end":{"line":93,"column":25}}],"line":88},"11":{"loc":{"start":{"line":103,"column":16},"end":{"line":114,"column":17}},"type":"if","locations":[{"start":{"line":103,"column":16},"end":{"line":114,"column":17}},{"start":{"line":103,"column":16},"end":{"line":114,"column":17}}],"line":103},"12":{"loc":{"start":{"line":103,"column":20},"end":{"line":103,"column":99}},"type":"binary-expr","locations":[{"start":{"line":103,"column":20},"end":{"line":103,"column":62}},{"start":{"line":103,"column":66},"end":{"line":103,"column":99}}],"line":103},"13":{"loc":{"start":{"line":106,"column":21},"end":{"line":114,"column":17}},"type":"if","locations":[{"start":{"line":106,"column":21},"end":{"line":114,"column":17}},{"start":{"line":106,"column":21},"end":{"line":114,"column":17}}],"line":106},"14":{"loc":{"start":{"line":106,"column":25},"end":{"line":106,"column":100}},"type":"binary-expr","locations":[{"start":{"line":106,"column":25},"end":{"line":106,"column":67}},{"start":{"line":106,"column":71},"end":{"line":106,"column":100}}],"line":106}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/Imposer.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/Imposer.ts"],"names":[],"mappings":"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","sourcesContent":["import { ParserFactory } from './Parser';\nimport { GeneratorFactory } from './Generator';\nimport { RuleSet } from './RuleSet';\nimport { Node } from './utils/Node';\n\nexport class Imposer {\n  private parserFactory: ParserFactory;\n  private generatorFactory: GeneratorFactory;\n  private ruleSet: RuleSet;\n\n  constructor(parser: ParserFactory, generator: GeneratorFactory, rules: RuleSet) {\n    this.parserFactory = parser;\n    this.generatorFactory = generator;\n    this.ruleSet = rules;\n  }\n\n  public impose(baseFST: Node, featureFST: Node, visitorKeys: { [key: string]: string[] }): Node {\n    const match = this.ruleSet.getMatchingRule(baseFST, featureFST);\n    if (match) {\n      return match.apply(baseFST, featureFST, this);\n    }\n\n    /* new strategy:\n     * 1. check if rule is matching\n     * 2. otherwise traverse deeper\n     * 3. comparison by id and path\n     */\n\n    const baseKeys: string[] = Object.keys(baseFST).sort((a, b) => a.localeCompare(b));\n\n    visitorKeys[baseFST.type].forEach((childKeys) => {\n      const index: number = baseKeys.indexOf(childKeys);\n      if (index > -1) {\n        baseKeys.splice(index, 1);\n      }\n    });\n\n    const newNode = baseFST.clone();\n    //just add all necessary informations to the resulting node\n    /* JS-Way ;)\n      for (var key of aBaseKeys) {\n       oNewNode[key] = baseFST[key];\n      } \n    */\n\n    newNode.featureName = featureFST.featureName;\n    const childKeys = visitorKeys[baseFST.type];\n    // check all childs and include all childs\n\n    childKeys.forEach((childKey) => {\n      const baseChilds = baseFST[childKey];\n      const featureChilds = featureFST[childKey];\n      let resultingChilds: Node[] = [];\n\n      if (typeof baseChilds === 'object' && Array.isArray(baseChilds)) {\n        baseChilds.forEach((childBase) => {\n          childBase.featureName = baseFST.featureName;\n          const childIndex: number[] = [];\n          const childFeature = featureChilds.filter((featureChild: Node, index: number) => {\n            if (featureChild.path === childBase.path && featureChild.name === childBase.name) {\n              childIndex.push(index);\n              return true;\n            } else {\n              return false;\n            }\n          });\n\n          // if no child for the feature can be found take the base one\n          if (childFeature.length === 0) {\n            childBase.featureName = featureFST.featureName;\n            resultingChilds.push(childBase);\n          }\n\n          // if a feature child is matching\n          if (childFeature.length === 1) {\n            const newChild: Node = childFeature[0];\n            newChild.featureName = featureFST.featureName;\n            const subImposeChildOne = this.impose(childBase, newChild, visitorKeys);\n            if (Array.isArray(subImposeChildOne)) {\n              resultingChilds = resultingChilds.concat(subImposeChildOne);\n            } else {\n              resultingChilds.push(subImposeChildOne);\n            }\n\n            //remove the feature childs afterwards\n            childFeature.splice(childIndex[0], 1);\n          }\n\n          if (childFeature.length > 1) {\n            console.warn(\n              'more than one child is matching find a rule to merge this node and its children more precisly.',\n            );\n            console.group();\n            console.warn('Path: ' + baseFST.path);\n            console.warn('Name: ' + baseFST.name);\n            console.warn('PropertyKey: ' + childKey);\n            console.group();\n            childFeature.forEach((featureChild: Node) => {\n              console.warn(featureChild.path + \"' '\" + featureChild.name);\n            });\n            console.groupEnd();\n            console.groupEnd();\n\n            const firstFeatureChild: Node = childFeature[0];\n\n            const oSubImposeChildMany = this.impose(childBase, firstFeatureChild, visitorKeys);\n            /* aResultingChilds.push(this.impose(oChildB, oChildF, mVisitorKeys)); */\n            if (Array.isArray(oSubImposeChildMany)) {\n              resultingChilds = resultingChilds.concat(oSubImposeChildMany);\n            } else {\n              resultingChilds.push(oSubImposeChildMany);\n            }\n\n            //remove the feature childs afterwards\n            featureChilds.splice(childIndex[0], 1);\n          }\n        });\n\n        // add missing 'new' feature childs\n        resultingChilds = resultingChilds.concat(featureChilds);\n        newNode[childKey] = resultingChilds;\n      } else {\n        if (typeof baseChilds === typeof featureChilds && typeof baseChilds === 'undefined') {\n          newNode[childKey] = resultingChilds;\n        } else if (typeof baseChilds === typeof featureChilds && !Array.isArray(featureChilds)) {\n          baseChilds.featureName = baseFST.featureName;\n          featureChilds.featureName = featureFST.featureName;\n          // Keep it without result distinguish\n          newNode[childKey] = this.impose(baseChilds, featureChilds, visitorKeys);\n        } else {\n          throw new Error('Non array children differ');\n        }\n      }\n    });\n\n    return newNode;\n  }\n\n  //#region getter/setter\n  public setParserFactory(parser: ParserFactory): void {\n    this.parserFactory = parser;\n  }\n\n  public setGeneratorFactory(generator: GeneratorFactory): void {\n    this.generatorFactory = generator;\n  }\n\n  public setRuleSet(rules: RuleSet): void {\n    this.ruleSet = rules;\n  }\n\n  public getParserFactory(): ParserFactory {\n    return this.parserFactory;\n  }\n\n  public getGeneratorFactory(): GeneratorFactory {\n    return this.generatorFactory;\n  }\n\n  public getRuleSet(): RuleSet {\n    return this.ruleSet;\n  }\n  //#endregion\n}\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Interfaces.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Interfaces.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":0},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/Interfaces.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/Interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { Node } from './utils/Node';\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface IGenerator {\n  generate(oAST: { [key: string]: any }, options?: { [key: string]: any }): string;\n  [key: string]: any;\n}\n\nexport interface IParser {\n  parse(content: string, options?: { [key: string]: any }): Node;\n  getVisitorKeys(): { [key: string]: string[] };\n  [key: string]: any;\n}\n\nimport { Imposer } from './Imposer';\n\nexport interface IRule {\n  apply: (baseFST: Node, featureFST: Node, context: Imposer) => Node;\n  target: string | string[];\n  selector: string;\n  selectorFeature?: string;\n}\n\nexport interface IPlugin {\n  name: string,\n  generator: {\n    generator: IGenerator;\n    fileEnding: string[];\n  };\n  parser: {\n    parser: IParser;\n    fileEnding: string[];\n  };\n  rules: IRule[];\n  config?: {\n    parser?: { [key: string]: { [key: string]: any } }\n    generator?: { [key: string]: { [key: string]: any } }\n  };\n}\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Parser.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Parser.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":34}},"6":{"start":{"line":19,"column":26},"end":{"line":19,"column":57}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":57}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":59}},"9":{"start":{"line":30,"column":8},"end":{"line":30,"column":65}},"10":{"start":{"line":38,"column":8},"end":{"line":38,"column":63}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":14,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":25},"end":{"line":22,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":40},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":37},"end":{"line":39,"column":5}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":37,"column":14},"end":{"line":37,"column":35}},"type":"default-arg","locations":[{"start":{"line":37,"column":33},"end":{"line":37,"column":35}}],"line":37}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/Parser.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/Parser.ts"],"names":[],"mappings":";;;AACA,uCAA4C;AAC5C,mCAAmC;AAEnC;;;GAGG;AACH,MAAa,aAAa;IAGxB;QAFQ,eAAU,GAA+B,EAAE,CAAC;QAGlD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED;;OAEG;IACK,kBAAkB;QACxB,MAAM,SAAS,GAAG,IAAI,yBAAe,EAAE,CAAC;QACxC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,gBAAQ,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,gBAAQ,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;OAKG;IACI,SAAS,CAAC,MAAe,EAAE,gBAAwB;QACxD,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,GAAG,MAAM,CAAC;IAC3D,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,mBAA2B,EAAE;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC;IACzD,CAAC;CACF;AAlCD,sCAkCC","sourcesContent":["import { IParser } from './Interfaces';\nimport { DirectoryParser } from './parsers';\nimport { FileType } from './enums';\n\n/**\n * ParserFactory, the factory implementation for the set of Parsers\n * to deliver the correct parser implementation for each type of source code\n */\nexport class ParserFactory {\n  private _parserMap: { [key: string]: IParser } = {};\n\n  constructor() {\n    this._loadDefaultParser();\n  }\n\n  /**\n   * Used at the constructor to load the directory generator for files and folders\n   */\n  private _loadDefaultParser(): void {\n    const dirParser = new DirectoryParser();\n    this.addParser(dirParser, FileType.File);\n    this.addParser(dirParser, FileType.Folder);\n  }\n\n  /**\n   * Add a new parser instance together with the correct source code assignment\n   *\n   * @param parser the parser instance to add\n   * @param sourceAssignment the source code type to distinguish between other generators\n   */\n  public addParser(parser: IParser, sourceAssignment: string): void {\n    this._parserMap[sourceAssignment.toUpperCase()] = parser;\n  }\n\n  /**\n   * Retrieve a code generator for a given code type\n   *\n   * @param sourceAssignment the identifier (file ending) for which type of source code the generator is needed\n   */\n  public getParser(sourceAssignment: string = \"\"): IParser | undefined {\n    return this._parserMap[sourceAssignment.toUpperCase()];\n  }\n}\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\parsers\\DirectoryParser.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\parsers\\DirectoryParser.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":13},"end":{"line":6,"column":26}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":30}},"6":{"start":{"line":11,"column":22},"end":{"line":11,"column":38}},"7":{"start":{"line":12,"column":22},"end":{"line":12,"column":43}},"8":{"start":{"line":13,"column":23},"end":{"line":13,"column":40}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":45}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":34}},"11":{"start":{"line":16,"column":8},"end":{"line":21,"column":9}},"12":{"start":{"line":17,"column":12},"end":{"line":17,"column":50}},"13":{"start":{"line":20,"column":12},"end":{"line":20,"column":48}},"14":{"start":{"line":22,"column":8},"end":{"line":29,"column":9}},"15":{"start":{"line":23,"column":12},"end":{"line":23,"column":208}},"16":{"start":{"line":24,"column":12},"end":{"line":24,"column":93}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":29}},"18":{"start":{"line":28,"column":12},"end":{"line":28,"column":38}},"19":{"start":{"line":30,"column":8},"end":{"line":38,"column":9}},"20":{"start":{"line":31,"column":12},"end":{"line":33,"column":15}},"21":{"start":{"line":32,"column":16},"end":{"line":32,"column":81}},"22":{"start":{"line":36,"column":12},"end":{"line":36,"column":81}},"23":{"start":{"line":37,"column":12},"end":{"line":37,"column":77}},"24":{"start":{"line":39,"column":8},"end":{"line":39,"column":22}},"25":{"start":{"line":42,"column":8},"end":{"line":42,"column":43}},"26":{"start":{"line":45,"column":0},"end":{"line":45,"column":42}},"27":{"start":{"line":46,"column":0},"end":{"line":49,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":30},"end":{"line":40,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":31,"column":58},"end":{"line":31,"column":59}},"loc":{"start":{"line":31,"column":69},"end":{"line":33,"column":13}},"line":31},"2":{"name":"(anonymous_2)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":21},"end":{"line":43,"column":5}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":22},"end":{"line":11,"column":38}},"type":"binary-expr","locations":[{"start":{"line":11,"column":22},"end":{"line":11,"column":31}},{"start":{"line":11,"column":35},"end":{"line":11,"column":38}}],"line":11},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":21,"column":9}},{"start":{"line":16,"column":8},"end":{"line":21,"column":9}}],"line":16},"2":{"loc":{"start":{"line":22,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":29,"column":9}},{"start":{"line":22,"column":8},"end":{"line":29,"column":9}}],"line":22},"3":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":76}},"type":"cond-expr","locations":[{"start":{"line":22,"column":53},"end":{"line":22,"column":59}},{"start":{"line":22,"column":62},"end":{"line":22,"column":76}}],"line":22},"4":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":50}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":28}},{"start":{"line":22,"column":32},"end":{"line":22,"column":50}}],"line":22},"5":{"loc":{"start":{"line":23,"column":26},"end":{"line":23,"column":207}},"type":"cond-expr","locations":[{"start":{"line":23,"column":154},"end":{"line":23,"column":193}},{"start":{"line":23,"column":196},"end":{"line":23,"column":207}}],"line":23},"6":{"loc":{"start":{"line":23,"column":27},"end":{"line":23,"column":143}},"type":"cond-expr","locations":[{"start":{"line":23,"column":127},"end":{"line":23,"column":133}},{"start":{"line":23,"column":136},"end":{"line":23,"column":143}}],"line":23},"7":{"loc":{"start":{"line":23,"column":27},"end":{"line":23,"column":124}},"type":"binary-expr","locations":[{"start":{"line":23,"column":27},"end":{"line":23,"column":107}},{"start":{"line":23,"column":111},"end":{"line":23,"column":124}}],"line":23},"8":{"loc":{"start":{"line":23,"column":33},"end":{"line":23,"column":97}},"type":"cond-expr","locations":[{"start":{"line":23,"column":74},"end":{"line":23,"column":80}},{"start":{"line":23,"column":83},"end":{"line":23,"column":97}}],"line":23},"9":{"loc":{"start":{"line":23,"column":33},"end":{"line":23,"column":71}},"type":"binary-expr","locations":[{"start":{"line":23,"column":33},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":71}}],"line":23},"10":{"loc":{"start":{"line":24,"column":28},"end":{"line":24,"column":92}},"type":"cond-expr","locations":[{"start":{"line":24,"column":69},"end":{"line":24,"column":75}},{"start":{"line":24,"column":78},"end":{"line":24,"column":92}}],"line":24},"11":{"loc":{"start":{"line":24,"column":28},"end":{"line":24,"column":66}},"type":"binary-expr","locations":[{"start":{"line":24,"column":28},"end":{"line":24,"column":44}},{"start":{"line":24,"column":48},"end":{"line":24,"column":66}}],"line":24},"12":{"loc":{"start":{"line":30,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":38,"column":9}},{"start":{"line":30,"column":8},"end":{"line":38,"column":9}}],"line":30}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/parsers/DirectoryParser.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/parsers/DirectoryParser.ts"],"names":[],"mappings":";;;AACA,wCAAqC;AACrC,oCAAoC;AAEpC,2BAA0D;AAC1D,+BAA+C;AAE/C,MAAa,eAAe;IAM1B,KAAK,CAAC,SAAiB,EAAE,OAA2B;;QAClD,MAAM,KAAK,GAAG,SAAS,IAAI,GAAG,CAAC;QAC/B,MAAM,KAAK,GAAG,cAAS,CAAC,KAAK,CAAC,CAAC;QAC/B,MAAM,MAAM,GAAG,IAAI,WAAI,EAAE,CAAC;QAE1B,MAAM,CAAC,IAAI,GAAG,eAAQ,CAAC,KAAK,CAAC,CAAC;QAC9B,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;QAE1B,IAAI,KAAK,CAAC,WAAW,EAAE,EAAE;YACvB,MAAM,CAAC,IAAI,GAAG,gBAAQ,CAAC,MAAM,CAAC;SAC/B;aAAM;YACL,MAAM,CAAC,IAAI,GAAG,gBAAQ,CAAC,IAAI,CAAC;SAC7B;QAED,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,EAAE;YACnB,MAAM,CAAC,IAAI,GAAG,OAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,IAAI,MAAK,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;YACnG,MAAM,CAAC,MAAM,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,CAAC;SACjC;aAAM;YACL,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;YACjB,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC;SAC3B;QAED,IAAI,KAAK,CAAC,WAAW,EAAE,EAAE;YACvB,MAAM,CAAC,QAAQ,GAAG,gBAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAa,EAAE,EAAE;gBACzD,OAAO,IAAI,CAAC,KAAK,CAAC,WAAI,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,MAAM,CAAC,MAAM,GAAG,cAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;YAC9D,MAAM,CAAC,OAAO,GAAG,iBAAY,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;SAC7D;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,cAAc;QACZ,OAAO,eAAe,CAAC,WAAW,CAAC;IACrC,CAAC;;AA1CH,0CA2CC;AA1CgB,2BAAW,GAAgC;IACxD,MAAM,EAAE,CAAC,UAAU,CAAC;IACpB,IAAI,EAAE,EAAE;CACT,CAAC","sourcesContent":["import { IParser } from '../Interfaces';\nimport { Node } from '../utils/Node';\nimport { FileType } from '../enums';\n\nimport { lstatSync, readdirSync, readFileSync } from 'fs';\nimport { join, extname, basename } from 'path';\n\nexport class DirectoryParser implements IParser {\n  private static visitorKeys: { [key: string]: string[] } = {\n    Folder: ['children'],\n    File: [],\n  };\n\n  parse(sFilePath: string, options?: { parent?: Node }): Node {\n    const route = sFilePath || '.';\n    const stats = lstatSync(route);\n    const oToken = new Node();\n\n    oToken.name = basename(route);\n    oToken.sourcePath = route;\n\n    if (stats.isDirectory()) {\n      oToken.type = FileType.Folder;\n    } else {\n      oToken.type = FileType.File;\n    }\n\n    if (options?.parent) {\n      oToken.path = options?.parent?.path !== '' ? `${options.parent.path}.${oToken.type}` : oToken.type;\n      oToken.parent = options?.parent;\n    } else {\n      oToken.path = '';\n      oToken.parent = undefined;\n    }\n\n    if (stats.isDirectory()) {\n      oToken.children = readdirSync(route).map((child: string) => {\n        return this.parse(join(route, child), { parent: oToken });\n      });\n    } else {\n      oToken.ending = extname(route).replace('.', '').toUpperCase();\n      oToken.content = readFileSync(route, { encoding: 'utf-8' });\n    }\n\n    return oToken;\n  }\n\n  getVisitorKeys(): { [key: string]: string[] } {\n    return DirectoryParser.visitorKeys;\n  }\n}\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\parsers\\index.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\parsers\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":136}},"4":{"start":{"line":5,"column":89},"end":{"line":5,"column":130}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":75},"end":{"line":5,"column":76}},"loc":{"start":{"line":5,"column":87},"end":{"line":5,"column":132}},"line":5}},"branchMap":{},"s":{"0":0,"1":0,"2":0,"3":0,"4":0},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/parsers/index.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/parsers/index.ts"],"names":[],"mappings":";;;AAAA,qDAAoD;AAA3C,kHAAA,eAAe,OAAA","sourcesContent":["export { DirectoryParser } from './DirectoryParser';\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Project.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Project.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":26}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":18},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":17},"end":{"line":8,"column":36}},"7":{"start":{"line":9,"column":18},"end":{"line":9,"column":38}},"8":{"start":{"line":10,"column":15},"end":{"line":10,"column":38}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":48}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":59}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":68}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":106}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":41}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":32}},"15":{"start":{"line":20,"column":8},"end":{"line":20,"column":27}},"16":{"start":{"line":21,"column":8},"end":{"line":21,"column":28}},"17":{"start":{"line":23,"column":28},"end":{"line":44,"column":42}},"18":{"start":{"line":38,"column":12},"end":{"line":42,"column":14}},"19":{"start":{"line":44,"column":30},"end":{"line":44,"column":41}},"20":{"start":{"line":45,"column":8},"end":{"line":59,"column":11}},"21":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"22":{"start":{"line":47,"column":16},"end":{"line":47,"column":26}},"23":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"24":{"start":{"line":50,"column":16},"end":{"line":50,"column":25}},"25":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"26":{"start":{"line":53,"column":16},"end":{"line":53,"column":26}},"27":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"28":{"start":{"line":56,"column":16},"end":{"line":56,"column":25}},"29":{"start":{"line":58,"column":12},"end":{"line":58,"column":21}},"30":{"start":{"line":60,"column":8},"end":{"line":60,"column":36}},"31":{"start":{"line":61,"column":8},"end":{"line":61,"column":105}},"32":{"start":{"line":63,"column":23},"end":{"line":63,"column":25}},"33":{"start":{"line":64,"column":26},"end":{"line":64,"column":118}},"34":{"start":{"line":65,"column":8},"end":{"line":84,"column":9}},"35":{"start":{"line":66,"column":34},"end":{"line":66,"column":86}},"36":{"start":{"line":67,"column":12},"end":{"line":67,"column":47}},"37":{"start":{"line":68,"column":12},"end":{"line":70,"column":13}},"38":{"start":{"line":69,"column":16},"end":{"line":69,"column":41}},"39":{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},"40":{"start":{"line":76,"column":16},"end":{"line":76,"column":33}},"41":{"start":{"line":78,"column":12},"end":{"line":83,"column":13}},"42":{"start":{"line":79,"column":16},"end":{"line":79,"column":43}},"43":{"start":{"line":82,"column":16},"end":{"line":82,"column":39}},"44":{"start":{"line":85,"column":8},"end":{"line":89,"column":9}},"45":{"start":{"line":87,"column":12},"end":{"line":87,"column":35}},"46":{"start":{"line":88,"column":12},"end":{"line":88,"column":28}},"47":{"start":{"line":94,"column":8},"end":{"line":99,"column":9}},"48":{"start":{"line":95,"column":12},"end":{"line":95,"column":96}},"49":{"start":{"line":98,"column":12},"end":{"line":98,"column":62}},"50":{"start":{"line":101,"column":8},"end":{"line":101,"column":70}},"51":{"start":{"line":103,"column":8},"end":{"line":103,"column":58}},"52":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"53":{"start":{"line":105,"column":12},"end":{"line":105,"column":74}},"54":{"start":{"line":105,"column":47},"end":{"line":105,"column":72}},"55":{"start":{"line":107,"column":8},"end":{"line":112,"column":9}},"56":{"start":{"line":110,"column":34},"end":{"line":110,"column":108}},"57":{"start":{"line":111,"column":12},"end":{"line":111,"column":58}},"58":{"start":{"line":114,"column":8},"end":{"line":116,"column":179}},"59":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"60":{"start":{"line":121,"column":12},"end":{"line":121,"column":39}},"61":{"start":{"line":123,"column":8},"end":{"line":133,"column":9}},"62":{"start":{"line":124,"column":29},"end":{"line":124,"column":88}},"63":{"start":{"line":124,"column":62},"end":{"line":124,"column":87}},"64":{"start":{"line":125,"column":12},"end":{"line":132,"column":13}},"65":{"start":{"line":126,"column":16},"end":{"line":126,"column":88}},"66":{"start":{"line":130,"column":16},"end":{"line":130,"column":75}},"67":{"start":{"line":131,"column":16},"end":{"line":131,"column":43}},"68":{"start":{"line":135,"column":8},"end":{"line":135,"column":74}},"69":{"start":{"line":137,"column":8},"end":{"line":137,"column":35}},"70":{"start":{"line":138,"column":24},"end":{"line":138,"column":45}},"71":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"72":{"start":{"line":140,"column":12},"end":{"line":140,"column":57}},"73":{"start":{"line":144,"column":8},"end":{"line":144,"column":80}},"74":{"start":{"line":144,"column":55},"end":{"line":144,"column":78}},"75":{"start":{"line":145,"column":24},"end":{"line":145,"column":194}},"76":{"start":{"line":145,"column":164},"end":{"line":145,"column":186}},"77":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"78":{"start":{"line":147,"column":12},"end":{"line":147,"column":98}},"79":{"start":{"line":149,"column":24},"end":{"line":149,"column":34}},"80":{"start":{"line":150,"column":8},"end":{"line":150,"column":32}},"81":{"start":{"line":151,"column":8},"end":{"line":151,"column":39}},"82":{"start":{"line":152,"column":8},"end":{"line":168,"column":9}},"83":{"start":{"line":154,"column":31},"end":{"line":154,"column":54}},"84":{"start":{"line":156,"column":12},"end":{"line":156,"column":59}},"85":{"start":{"line":157,"column":34},"end":{"line":157,"column":208}},"86":{"start":{"line":157,"column":174},"end":{"line":157,"column":200}},"87":{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},"88":{"start":{"line":159,"column":16},"end":{"line":159,"column":103}},"89":{"start":{"line":161,"column":31},"end":{"line":161,"column":47}},"90":{"start":{"line":162,"column":12},"end":{"line":162,"column":37}},"91":{"start":{"line":163,"column":12},"end":{"line":163,"column":62}},"92":{"start":{"line":167,"column":12},"end":{"line":167,"column":178}},"93":{"start":{"line":170,"column":8},"end":{"line":170,"column":50}},"94":{"start":{"line":172,"column":8},"end":{"line":172,"column":42}},"95":{"start":{"line":173,"column":8},"end":{"line":175,"column":11}},"96":{"start":{"line":177,"column":8},"end":{"line":177,"column":48}},"97":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"98":{"start":{"line":181,"column":12},"end":{"line":181,"column":48}},"99":{"start":{"line":183,"column":24},"end":{"line":183,"column":84}},"100":{"start":{"line":183,"column":57},"end":{"line":183,"column":83}},"101":{"start":{"line":184,"column":8},"end":{"line":186,"column":9}},"102":{"start":{"line":185,"column":12},"end":{"line":185,"column":92}},"103":{"start":{"line":187,"column":8},"end":{"line":187,"column":34}},"104":{"start":{"line":190,"column":8},"end":{"line":206,"column":9}},"105":{"start":{"line":191,"column":12},"end":{"line":202,"column":15}},"106":{"start":{"line":192,"column":32},"end":{"line":192,"column":54}},"107":{"start":{"line":194,"column":16},"end":{"line":201,"column":18}},"108":{"start":{"line":199,"column":24},"end":{"line":199,"column":47}},"109":{"start":{"line":205,"column":12},"end":{"line":205,"column":78}},"110":{"start":{"line":210,"column":8},"end":{"line":210,"column":58}},"111":{"start":{"line":211,"column":21},"end":{"line":211,"column":51}},"112":{"start":{"line":212,"column":28},"end":{"line":212,"column":33}},"113":{"start":{"line":213,"column":8},"end":{"line":216,"column":9}},"114":{"start":{"line":214,"column":12},"end":{"line":214,"column":33}},"115":{"start":{"line":215,"column":12},"end":{"line":215,"column":53}},"116":{"start":{"line":217,"column":8},"end":{"line":299,"column":9}},"117":{"start":{"line":218,"column":12},"end":{"line":245,"column":13}},"118":{"start":{"line":219,"column":16},"end":{"line":234,"column":17}},"119":{"start":{"line":220,"column":20},"end":{"line":233,"column":23}},"120":{"start":{"line":222,"column":39},"end":{"line":222,"column":68}},"121":{"start":{"line":223,"column":24},"end":{"line":232,"column":25}},"122":{"start":{"line":224,"column":28},"end":{"line":226,"column":29}},"123":{"start":{"line":225,"column":32},"end":{"line":225,"column":157}},"124":{"start":{"line":231,"column":28},"end":{"line":231,"column":114}},"125":{"start":{"line":235,"column":16},"end":{"line":244,"column":17}},"126":{"start":{"line":236,"column":20},"end":{"line":240,"column":23}},"127":{"start":{"line":237,"column":24},"end":{"line":239,"column":25}},"128":{"start":{"line":238,"column":28},"end":{"line":238,"column":89}},"129":{"start":{"line":243,"column":20},"end":{"line":243,"column":98}},"130":{"start":{"line":246,"column":12},"end":{"line":275,"column":13}},"131":{"start":{"line":247,"column":16},"end":{"line":274,"column":17}},"132":{"start":{"line":248,"column":20},"end":{"line":263,"column":21}},"133":{"start":{"line":249,"column":24},"end":{"line":262,"column":27}},"134":{"start":{"line":251,"column":43},"end":{"line":251,"column":73}},"135":{"start":{"line":252,"column":28},"end":{"line":261,"column":29}},"136":{"start":{"line":253,"column":32},"end":{"line":255,"column":33}},"137":{"start":{"line":254,"column":36},"end":{"line":254,"column":124}},"138":{"start":{"line":260,"column":32},"end":{"line":260,"column":119}},"139":{"start":{"line":264,"column":20},"end":{"line":273,"column":21}},"140":{"start":{"line":265,"column":24},"end":{"line":269,"column":27}},"141":{"start":{"line":266,"column":28},"end":{"line":268,"column":29}},"142":{"start":{"line":267,"column":32},"end":{"line":267,"column":104}},"143":{"start":{"line":272,"column":24},"end":{"line":272,"column":117}},"144":{"start":{"line":276,"column":12},"end":{"line":285,"column":13}},"145":{"start":{"line":277,"column":16},"end":{"line":284,"column":17}},"146":{"start":{"line":280,"column":20},"end":{"line":280,"column":139}},"147":{"start":{"line":283,"column":20},"end":{"line":283,"column":65}},"148":{"start":{"line":288,"column":12},"end":{"line":297,"column":13}},"149":{"start":{"line":291,"column":16},"end":{"line":291,"column":127}},"150":{"start":{"line":296,"column":16},"end":{"line":296,"column":114}},"151":{"start":{"line":298,"column":12},"end":{"line":298,"column":28}},"152":{"start":{"line":302,"column":8},"end":{"line":325,"column":9}},"153":{"start":{"line":303,"column":26},"end":{"line":303,"column":52}},"154":{"start":{"line":304,"column":32},"end":{"line":315,"column":14}},"155":{"start":{"line":306,"column":16},"end":{"line":311,"column":17}},"156":{"start":{"line":307,"column":20},"end":{"line":307,"column":69}},"157":{"start":{"line":310,"column":20},"end":{"line":310,"column":27}},"158":{"start":{"line":314,"column":16},"end":{"line":314,"column":29}},"159":{"start":{"line":316,"column":12},"end":{"line":316,"column":31}},"160":{"start":{"line":319,"column":12},"end":{"line":324,"column":13}},"161":{"start":{"line":320,"column":16},"end":{"line":320,"column":43}},"162":{"start":{"line":323,"column":16},"end":{"line":323,"column":26}},"163":{"start":{"line":328,"column":8},"end":{"line":333,"column":9}},"164":{"start":{"line":329,"column":12},"end":{"line":329,"column":83}},"165":{"start":{"line":332,"column":12},"end":{"line":332,"column":19}},"166":{"start":{"line":336,"column":8},"end":{"line":341,"column":9}},"167":{"start":{"line":337,"column":12},"end":{"line":337,"column":106}},"168":{"start":{"line":340,"column":12},"end":{"line":340,"column":19}},"169":{"start":{"line":344,"column":8},"end":{"line":344,"column":62}},"170":{"start":{"line":348,"column":8},"end":{"line":353,"column":9}},"171":{"start":{"line":349,"column":12},"end":{"line":349,"column":44}},"172":{"start":{"line":352,"column":12},"end":{"line":352,"column":41}},"173":{"start":{"line":356,"column":8},"end":{"line":367,"column":9}},"174":{"start":{"line":357,"column":12},"end":{"line":365,"column":15}},"175":{"start":{"line":358,"column":32},"end":{"line":358,"column":60}},"176":{"start":{"line":359,"column":16},"end":{"line":364,"column":17}},"177":{"start":{"line":360,"column":20},"end":{"line":360,"column":52}},"178":{"start":{"line":363,"column":20},"end":{"line":363,"column":45}},"179":{"start":{"line":366,"column":12},"end":{"line":366,"column":38}},"180":{"start":{"line":370,"column":0},"end":{"line":370,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":25},"end":{"line":117,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":37,"column":17},"end":{"line":37,"column":18}},"loc":{"start":{"line":37,"column":27},"end":{"line":43,"column":9}},"line":37},"2":{"name":"(anonymous_2)","decl":{"start":{"line":44,"column":20},"end":{"line":44,"column":21}},"loc":{"start":{"line":44,"column":30},"end":{"line":44,"column":41}},"line":44},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":25},"end":{"line":45,"column":26}},"loc":{"start":{"line":45,"column":35},"end":{"line":59,"column":9}},"line":45},"4":{"name":"(anonymous_4)","decl":{"start":{"line":105,"column":34},"end":{"line":105,"column":35}},"loc":{"start":{"line":105,"column":47},"end":{"line":105,"column":72}},"line":105},"5":{"name":"(anonymous_5)","decl":{"start":{"line":118,"column":4},"end":{"line":118,"column":5}},"loc":{"start":{"line":118,"column":22},"end":{"line":178,"column":5}},"line":118},"6":{"name":"(anonymous_6)","decl":{"start":{"line":124,"column":50},"end":{"line":124,"column":51}},"loc":{"start":{"line":124,"column":62},"end":{"line":124,"column":87}},"line":124},"7":{"name":"(anonymous_7)","decl":{"start":{"line":144,"column":37},"end":{"line":144,"column":38}},"loc":{"start":{"line":144,"column":55},"end":{"line":144,"column":78}},"line":144},"8":{"name":"(anonymous_8)","decl":{"start":{"line":145,"column":152},"end":{"line":145,"column":153}},"loc":{"start":{"line":145,"column":164},"end":{"line":145,"column":186}},"line":145},"9":{"name":"(anonymous_9)","decl":{"start":{"line":157,"column":162},"end":{"line":157,"column":163}},"loc":{"start":{"line":157,"column":174},"end":{"line":157,"column":200}},"line":157},"10":{"name":"(anonymous_10)","decl":{"start":{"line":179,"column":4},"end":{"line":179,"column":5}},"loc":{"start":{"line":179,"column":26},"end":{"line":188,"column":5}},"line":179},"11":{"name":"(anonymous_11)","decl":{"start":{"line":183,"column":45},"end":{"line":183,"column":46}},"loc":{"start":{"line":183,"column":57},"end":{"line":183,"column":83}},"line":183},"12":{"name":"(anonymous_12)","decl":{"start":{"line":189,"column":4},"end":{"line":189,"column":5}},"loc":{"start":{"line":189,"column":29},"end":{"line":207,"column":5}},"line":189},"13":{"name":"(anonymous_13)","decl":{"start":{"line":192,"column":24},"end":{"line":192,"column":25}},"loc":{"start":{"line":192,"column":32},"end":{"line":192,"column":54}},"line":192},"14":{"name":"(anonymous_14)","decl":{"start":{"line":193,"column":21},"end":{"line":193,"column":22}},"loc":{"start":{"line":193,"column":33},"end":{"line":202,"column":13}},"line":193},"15":{"name":"(anonymous_15)","decl":{"start":{"line":198,"column":32},"end":{"line":198,"column":33}},"loc":{"start":{"line":198,"column":46},"end":{"line":200,"column":21}},"line":198},"16":{"name":"(anonymous_16)","decl":{"start":{"line":208,"column":4},"end":{"line":208,"column":5}},"loc":{"start":{"line":208,"column":24},"end":{"line":300,"column":5}},"line":208},"17":{"name":"(anonymous_17)","decl":{"start":{"line":220,"column":62},"end":{"line":220,"column":63}},"loc":{"start":{"line":220,"column":71},"end":{"line":233,"column":21}},"line":220},"18":{"name":"(anonymous_18)","decl":{"start":{"line":236,"column":53},"end":{"line":236,"column":54}},"loc":{"start":{"line":236,"column":66},"end":{"line":240,"column":21}},"line":236},"19":{"name":"(anonymous_19)","decl":{"start":{"line":249,"column":69},"end":{"line":249,"column":70}},"loc":{"start":{"line":249,"column":79},"end":{"line":262,"column":25}},"line":249},"20":{"name":"(anonymous_20)","decl":{"start":{"line":265,"column":60},"end":{"line":265,"column":61}},"loc":{"start":{"line":265,"column":72},"end":{"line":269,"column":25}},"line":265},"21":{"name":"(anonymous_21)","decl":{"start":{"line":301,"column":4},"end":{"line":301,"column":5}},"loc":{"start":{"line":301,"column":32},"end":{"line":326,"column":5}},"line":301},"22":{"name":"(anonymous_22)","decl":{"start":{"line":305,"column":21},"end":{"line":305,"column":22}},"loc":{"start":{"line":305,"column":36},"end":{"line":312,"column":13}},"line":305},"23":{"name":"(anonymous_23)","decl":{"start":{"line":313,"column":24},"end":{"line":313,"column":25}},"loc":{"start":{"line":313,"column":35},"end":{"line":315,"column":13}},"line":313},"24":{"name":"(anonymous_24)","decl":{"start":{"line":327,"column":4},"end":{"line":327,"column":5}},"loc":{"start":{"line":327,"column":29},"end":{"line":334,"column":5}},"line":327},"25":{"name":"(anonymous_25)","decl":{"start":{"line":335,"column":4},"end":{"line":335,"column":5}},"loc":{"start":{"line":335,"column":30},"end":{"line":342,"column":5}},"line":335},"26":{"name":"(anonymous_26)","decl":{"start":{"line":343,"column":4},"end":{"line":343,"column":5}},"loc":{"start":{"line":343,"column":23},"end":{"line":345,"column":5}},"line":343},"27":{"name":"(anonymous_27)","decl":{"start":{"line":347,"column":4},"end":{"line":347,"column":5}},"loc":{"start":{"line":347,"column":50},"end":{"line":354,"column":5}},"line":347},"28":{"name":"(anonymous_28)","decl":{"start":{"line":355,"column":4},"end":{"line":355,"column":5}},"loc":{"start":{"line":355,"column":33},"end":{"line":368,"column":5}},"line":355},"29":{"name":"(anonymous_29)","decl":{"start":{"line":357,"column":48},"end":{"line":357,"column":49}},"loc":{"start":{"line":357,"column":58},"end":{"line":365,"column":13}},"line":357}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":31}},"type":"binary-expr","locations":[{"start":{"line":19,"column":18},"end":{"line":19,"column":25}},{"start":{"line":19,"column":29},"end":{"line":19,"column":31}}],"line":19},"1":{"loc":{"start":{"line":40,"column":24},"end":{"line":40,"column":101}},"type":"cond-expr","locations":[{"start":{"line":40,"column":36},"end":{"line":40,"column":93}},{"start":{"line":40,"column":96},"end":{"line":40,"column":101}}],"line":40},"2":{"loc":{"start":{"line":41,"column":26},"end":{"line":41,"column":83}},"type":"cond-expr","locations":[{"start":{"line":41,"column":38},"end":{"line":41,"column":78}},{"start":{"line":41,"column":81},"end":{"line":41,"column":83}}],"line":41},"3":{"loc":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},{"start":{"line":46,"column":12},"end":{"line":48,"column":13}}],"line":46},"4":{"loc":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},{"start":{"line":49,"column":12},"end":{"line":51,"column":13}}],"line":49},"5":{"loc":{"start":{"line":49,"column":16},"end":{"line":49,"column":66}},"type":"binary-expr","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":39}},{"start":{"line":49,"column":43},"end":{"line":49,"column":66}}],"line":49},"6":{"loc":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},{"start":{"line":52,"column":12},"end":{"line":54,"column":13}}],"line":52},"7":{"loc":{"start":{"line":52,"column":16},"end":{"line":52,"column":69}},"type":"binary-expr","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":41}},{"start":{"line":52,"column":45},"end":{"line":52,"column":69}}],"line":52},"8":{"loc":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},{"start":{"line":55,"column":12},"end":{"line":57,"column":13}}],"line":55},"9":{"loc":{"start":{"line":55,"column":16},"end":{"line":55,"column":69}},"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":40}},{"start":{"line":55,"column":44},"end":{"line":55,"column":69}}],"line":55},"10":{"loc":{"start":{"line":61,"column":21},"end":{"line":61,"column":104}},"type":"binary-expr","locations":[{"start":{"line":61,"column":22},"end":{"line":61,"column":97}},{"start":{"line":61,"column":102},"end":{"line":61,"column":104}}],"line":61},"11":{"loc":{"start":{"line":61,"column":22},"end":{"line":61,"column":97}},"type":"cond-expr","locations":[{"start":{"line":61,"column":69},"end":{"line":61,"column":75}},{"start":{"line":61,"column":78},"end":{"line":61,"column":97}}],"line":61},"12":{"loc":{"start":{"line":61,"column":22},"end":{"line":61,"column":66}},"type":"binary-expr","locations":[{"start":{"line":61,"column":22},"end":{"line":61,"column":41}},{"start":{"line":61,"column":45},"end":{"line":61,"column":66}}],"line":61},"13":{"loc":{"start":{"line":68,"column":12},"end":{"line":70,"column":13}},"type":"if","locations":[{"start":{"line":68,"column":12},"end":{"line":70,"column":13}},{"start":{"line":68,"column":12},"end":{"line":70,"column":13}}],"line":68},"14":{"loc":{"start":{"line":68,"column":16},"end":{"line":68,"column":72}},"type":"binary-expr","locations":[{"start":{"line":68,"column":16},"end":{"line":68,"column":51}},{"start":{"line":68,"column":55},"end":{"line":68,"column":72}}],"line":68},"15":{"loc":{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":77,"column":13}},{"start":{"line":75,"column":12},"end":{"line":77,"column":13}}],"line":75},"16":{"loc":{"start":{"line":75,"column":16},"end":{"line":75,"column":78}},"type":"binary-expr","locations":[{"start":{"line":75,"column":16},"end":{"line":75,"column":31}},{"start":{"line":75,"column":35},"end":{"line":75,"column":54}},{"start":{"line":75,"column":58},"end":{"line":75,"column":78}}],"line":75},"17":{"loc":{"start":{"line":78,"column":12},"end":{"line":83,"column":13}},"type":"if","locations":[{"start":{"line":78,"column":12},"end":{"line":83,"column":13}},{"start":{"line":78,"column":12},"end":{"line":83,"column":13}}],"line":78},"18":{"loc":{"start":{"line":85,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":89,"column":9}},{"start":{"line":85,"column":8},"end":{"line":89,"column":9}}],"line":85},"19":{"loc":{"start":{"line":94,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":99,"column":9}},{"start":{"line":94,"column":8},"end":{"line":99,"column":9}}],"line":94},"20":{"loc":{"start":{"line":94,"column":12},"end":{"line":94,"column":130}},"type":"binary-expr","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":26}},{"start":{"line":94,"column":30},"end":{"line":94,"column":64}},{"start":{"line":94,"column":68},"end":{"line":94,"column":130}}],"line":94},"21":{"loc":{"start":{"line":98,"column":28},"end":{"line":98,"column":61}},"type":"binary-expr","locations":[{"start":{"line":98,"column":28},"end":{"line":98,"column":43}},{"start":{"line":98,"column":47},"end":{"line":98,"column":61}}],"line":98},"22":{"loc":{"start":{"line":101,"column":28},"end":{"line":101,"column":69}},"type":"binary-expr","locations":[{"start":{"line":101,"column":28},"end":{"line":101,"column":47}},{"start":{"line":101,"column":51},"end":{"line":101,"column":69}}],"line":101},"23":{"loc":{"start":{"line":103,"column":24},"end":{"line":103,"column":57}},"type":"binary-expr","locations":[{"start":{"line":103,"column":24},"end":{"line":103,"column":39}},{"start":{"line":103,"column":43},"end":{"line":103,"column":57}}],"line":103},"24":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"25":{"loc":{"start":{"line":104,"column":12},"end":{"line":104,"column":53}},"type":"binary-expr","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":25}},{"start":{"line":104,"column":29},"end":{"line":104,"column":53}}],"line":104},"26":{"loc":{"start":{"line":107,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":112,"column":9}},{"start":{"line":107,"column":8},"end":{"line":112,"column":9}}],"line":107},"27":{"loc":{"start":{"line":107,"column":12},"end":{"line":109,"column":79}},"type":"binary-expr","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":31}},{"start":{"line":108,"column":12},"end":{"line":108,"column":51}},{"start":{"line":109,"column":12},"end":{"line":109,"column":79}}],"line":107},"28":{"loc":{"start":{"line":115,"column":12},"end":{"line":116,"column":178}},"type":"binary-expr","locations":[{"start":{"line":115,"column":13},"end":{"line":116,"column":156}},{"start":{"line":116,"column":161},"end":{"line":116,"column":178}}],"line":115},"29":{"loc":{"start":{"line":115,"column":13},"end":{"line":116,"column":156}},"type":"cond-expr","locations":[{"start":{"line":116,"column":63},"end":{"line":116,"column":69}},{"start":{"line":116,"column":72},"end":{"line":116,"column":156}}],"line":115},"30":{"loc":{"start":{"line":115,"column":13},"end":{"line":116,"column":60}},"type":"binary-expr","locations":[{"start":{"line":115,"column":13},"end":{"line":116,"column":43}},{"start":{"line":116,"column":47},"end":{"line":116,"column":60}}],"line":115},"31":{"loc":{"start":{"line":116,"column":111},"end":{"line":116,"column":154}},"type":"binary-expr","locations":[{"start":{"line":116,"column":111},"end":{"line":116,"column":131}},{"start":{"line":116,"column":135},"end":{"line":116,"column":154}}],"line":116},"32":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{"line":120,"column":8},"end":{"line":122,"column":9}}],"line":120},"33":{"loc":{"start":{"line":123,"column":8},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":133,"column":9}},{"start":{"line":123,"column":8},"end":{"line":133,"column":9}}],"line":123},"34":{"loc":{"start":{"line":125,"column":12},"end":{"line":132,"column":13}},"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":132,"column":13}},{"start":{"line":125,"column":12},"end":{"line":132,"column":13}}],"line":125},"35":{"loc":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},{"start":{"line":139,"column":8},"end":{"line":141,"column":9}}],"line":139},"36":{"loc":{"start":{"line":145,"column":24},"end":{"line":145,"column":194}},"type":"binary-expr","locations":[{"start":{"line":145,"column":25},"end":{"line":145,"column":187}},{"start":{"line":145,"column":192},"end":{"line":145,"column":194}}],"line":145},"37":{"loc":{"start":{"line":145,"column":25},"end":{"line":145,"column":187}},"type":"cond-expr","locations":[{"start":{"line":145,"column":133},"end":{"line":145,"column":139}},{"start":{"line":145,"column":142},"end":{"line":145,"column":187}}],"line":145},"38":{"loc":{"start":{"line":145,"column":25},"end":{"line":145,"column":130}},"type":"binary-expr","locations":[{"start":{"line":145,"column":25},"end":{"line":145,"column":113}},{"start":{"line":145,"column":117},"end":{"line":145,"column":130}}],"line":145},"39":{"loc":{"start":{"line":145,"column":31},"end":{"line":145,"column":103}},"type":"cond-expr","locations":[{"start":{"line":145,"column":83},"end":{"line":145,"column":89}},{"start":{"line":145,"column":92},"end":{"line":145,"column":103}}],"line":145},"40":{"loc":{"start":{"line":145,"column":31},"end":{"line":145,"column":80}},"type":"binary-expr","locations":[{"start":{"line":145,"column":31},"end":{"line":145,"column":63}},{"start":{"line":145,"column":67},"end":{"line":145,"column":80}}],"line":145},"41":{"loc":{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":148,"column":9}},{"start":{"line":146,"column":8},"end":{"line":148,"column":9}}],"line":146},"42":{"loc":{"start":{"line":154,"column":31},"end":{"line":154,"column":54}},"type":"binary-expr","locations":[{"start":{"line":154,"column":31},"end":{"line":154,"column":48}},{"start":{"line":154,"column":52},"end":{"line":154,"column":54}}],"line":154},"43":{"loc":{"start":{"line":157,"column":34},"end":{"line":157,"column":208}},"type":"binary-expr","locations":[{"start":{"line":157,"column":35},"end":{"line":157,"column":201}},{"start":{"line":157,"column":206},"end":{"line":157,"column":208}}],"line":157},"44":{"loc":{"start":{"line":157,"column":35},"end":{"line":157,"column":201}},"type":"cond-expr","locations":[{"start":{"line":157,"column":143},"end":{"line":157,"column":149}},{"start":{"line":157,"column":152},"end":{"line":157,"column":201}}],"line":157},"45":{"loc":{"start":{"line":157,"column":35},"end":{"line":157,"column":140}},"type":"binary-expr","locations":[{"start":{"line":157,"column":35},"end":{"line":157,"column":123}},{"start":{"line":157,"column":127},"end":{"line":157,"column":140}}],"line":157},"46":{"loc":{"start":{"line":157,"column":41},"end":{"line":157,"column":113}},"type":"cond-expr","locations":[{"start":{"line":157,"column":93},"end":{"line":157,"column":99}},{"start":{"line":157,"column":102},"end":{"line":157,"column":113}}],"line":157},"47":{"loc":{"start":{"line":157,"column":41},"end":{"line":157,"column":90}},"type":"binary-expr","locations":[{"start":{"line":157,"column":41},"end":{"line":157,"column":73}},{"start":{"line":157,"column":77},"end":{"line":157,"column":90}}],"line":157},"48":{"loc":{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},"type":"if","locations":[{"start":{"line":158,"column":12},"end":{"line":160,"column":13}},{"start":{"line":158,"column":12},"end":{"line":160,"column":13}}],"line":158},"49":{"loc":{"start":{"line":167,"column":68},"end":{"line":167,"column":176}},"type":"binary-expr","locations":[{"start":{"line":167,"column":69},"end":{"line":167,"column":169}},{"start":{"line":167,"column":174},"end":{"line":167,"column":176}}],"line":167},"50":{"loc":{"start":{"line":167,"column":69},"end":{"line":167,"column":169}},"type":"cond-expr","locations":[{"start":{"line":167,"column":141},"end":{"line":167,"column":147}},{"start":{"line":167,"column":150},"end":{"line":167,"column":169}}],"line":167},"51":{"loc":{"start":{"line":167,"column":69},"end":{"line":167,"column":138}},"type":"binary-expr","locations":[{"start":{"line":167,"column":69},"end":{"line":167,"column":121}},{"start":{"line":167,"column":125},"end":{"line":167,"column":138}}],"line":167},"52":{"loc":{"start":{"line":173,"column":8},"end":{"line":175,"column":10}},"type":"cond-expr","locations":[{"start":{"line":173,"column":86},"end":{"line":173,"column":92}},{"start":{"line":173,"column":95},"end":{"line":175,"column":10}}],"line":173},"53":{"loc":{"start":{"line":173,"column":8},"end":{"line":173,"column":83}},"type":"binary-expr","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":66}},{"start":{"line":173,"column":70},"end":{"line":173,"column":83}}],"line":173},"54":{"loc":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},{"start":{"line":180,"column":8},"end":{"line":182,"column":9}}],"line":180},"55":{"loc":{"start":{"line":184,"column":8},"end":{"line":186,"column":9}},"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":186,"column":9}},{"start":{"line":184,"column":8},"end":{"line":186,"column":9}}],"line":184},"56":{"loc":{"start":{"line":190,"column":8},"end":{"line":206,"column":9}},"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":206,"column":9}},{"start":{"line":190,"column":8},"end":{"line":206,"column":9}}],"line":190},"57":{"loc":{"start":{"line":213,"column":8},"end":{"line":216,"column":9}},"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":216,"column":9}},{"start":{"line":213,"column":8},"end":{"line":216,"column":9}}],"line":213},"58":{"loc":{"start":{"line":213,"column":12},"end":{"line":213,"column":63}},"type":"binary-expr","locations":[{"start":{"line":213,"column":12},"end":{"line":213,"column":19}},{"start":{"line":213,"column":23},"end":{"line":213,"column":63}}],"line":213},"59":{"loc":{"start":{"line":217,"column":8},"end":{"line":299,"column":9}},"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":299,"column":9}},{"start":{"line":217,"column":8},"end":{"line":299,"column":9}}],"line":217},"60":{"loc":{"start":{"line":218,"column":12},"end":{"line":245,"column":13}},"type":"if","locations":[{"start":{"line":218,"column":12},"end":{"line":245,"column":13}},{"start":{"line":218,"column":12},"end":{"line":245,"column":13}}],"line":218},"61":{"loc":{"start":{"line":218,"column":16},"end":{"line":218,"column":64}},"type":"binary-expr","locations":[{"start":{"line":218,"column":16},"end":{"line":218,"column":40}},{"start":{"line":218,"column":44},"end":{"line":218,"column":64}}],"line":218},"62":{"loc":{"start":{"line":219,"column":16},"end":{"line":234,"column":17}},"type":"if","locations":[{"start":{"line":219,"column":16},"end":{"line":234,"column":17}},{"start":{"line":219,"column":16},"end":{"line":234,"column":17}}],"line":219},"63":{"loc":{"start":{"line":219,"column":20},"end":{"line":219,"column":57}},"type":"binary-expr","locations":[{"start":{"line":219,"column":20},"end":{"line":219,"column":33}},{"start":{"line":219,"column":37},"end":{"line":219,"column":57}}],"line":219},"64":{"loc":{"start":{"line":223,"column":24},"end":{"line":232,"column":25}},"type":"if","locations":[{"start":{"line":223,"column":24},"end":{"line":232,"column":25}},{"start":{"line":223,"column":24},"end":{"line":232,"column":25}}],"line":223},"65":{"loc":{"start":{"line":223,"column":28},"end":{"line":223,"column":103}},"type":"binary-expr","locations":[{"start":{"line":223,"column":28},"end":{"line":223,"column":48}},{"start":{"line":223,"column":52},"end":{"line":223,"column":103}}],"line":223},"66":{"loc":{"start":{"line":224,"column":28},"end":{"line":226,"column":29}},"type":"if","locations":[{"start":{"line":224,"column":28},"end":{"line":226,"column":29}},{"start":{"line":224,"column":28},"end":{"line":226,"column":29}}],"line":224},"67":{"loc":{"start":{"line":224,"column":32},"end":{"line":224,"column":99}},"type":"cond-expr","locations":[{"start":{"line":224,"column":81},"end":{"line":224,"column":87}},{"start":{"line":224,"column":90},"end":{"line":224,"column":99}}],"line":224},"68":{"loc":{"start":{"line":224,"column":32},"end":{"line":224,"column":78}},"type":"binary-expr","locations":[{"start":{"line":224,"column":32},"end":{"line":224,"column":61}},{"start":{"line":224,"column":65},"end":{"line":224,"column":78}}],"line":224},"69":{"loc":{"start":{"line":225,"column":83},"end":{"line":225,"column":155}},"type":"cond-expr","locations":[{"start":{"line":225,"column":132},"end":{"line":225,"column":138}},{"start":{"line":225,"column":141},"end":{"line":225,"column":155}}],"line":225},"70":{"loc":{"start":{"line":225,"column":83},"end":{"line":225,"column":129}},"type":"binary-expr","locations":[{"start":{"line":225,"column":83},"end":{"line":225,"column":112}},{"start":{"line":225,"column":116},"end":{"line":225,"column":129}}],"line":225},"71":{"loc":{"start":{"line":235,"column":16},"end":{"line":244,"column":17}},"type":"if","locations":[{"start":{"line":235,"column":16},"end":{"line":244,"column":17}},{"start":{"line":235,"column":16},"end":{"line":244,"column":17}}],"line":235},"72":{"loc":{"start":{"line":237,"column":24},"end":{"line":239,"column":25}},"type":"if","locations":[{"start":{"line":237,"column":24},"end":{"line":239,"column":25}},{"start":{"line":237,"column":24},"end":{"line":239,"column":25}}],"line":237},"73":{"loc":{"start":{"line":246,"column":12},"end":{"line":275,"column":13}},"type":"if","locations":[{"start":{"line":246,"column":12},"end":{"line":275,"column":13}},{"start":{"line":246,"column":12},"end":{"line":275,"column":13}}],"line":246},"74":{"loc":{"start":{"line":247,"column":16},"end":{"line":274,"column":17}},"type":"if","locations":[{"start":{"line":247,"column":16},"end":{"line":274,"column":17}},{"start":{"line":247,"column":16},"end":{"line":274,"column":17}}],"line":247},"75":{"loc":{"start":{"line":247,"column":20},"end":{"line":247,"column":105}},"type":"binary-expr","locations":[{"start":{"line":247,"column":20},"end":{"line":247,"column":61}},{"start":{"line":247,"column":65},"end":{"line":247,"column":105}}],"line":247},"76":{"loc":{"start":{"line":248,"column":20},"end":{"line":263,"column":21}},"type":"if","locations":[{"start":{"line":248,"column":20},"end":{"line":263,"column":21}},{"start":{"line":248,"column":20},"end":{"line":263,"column":21}}],"line":248},"77":{"loc":{"start":{"line":248,"column":24},"end":{"line":248,"column":64}},"type":"binary-expr","locations":[{"start":{"line":248,"column":24},"end":{"line":248,"column":37}},{"start":{"line":248,"column":41},"end":{"line":248,"column":64}}],"line":248},"78":{"loc":{"start":{"line":252,"column":28},"end":{"line":261,"column":29}},"type":"if","locations":[{"start":{"line":252,"column":28},"end":{"line":261,"column":29}},{"start":{"line":252,"column":28},"end":{"line":261,"column":29}}],"line":252},"79":{"loc":{"start":{"line":252,"column":40},"end":{"line":252,"column":122}},"type":"cond-expr","locations":[{"start":{"line":252,"column":79},"end":{"line":252,"column":85}},{"start":{"line":252,"column":88},"end":{"line":252,"column":122}}],"line":252},"80":{"loc":{"start":{"line":252,"column":40},"end":{"line":252,"column":76}},"type":"binary-expr","locations":[{"start":{"line":252,"column":40},"end":{"line":252,"column":55}},{"start":{"line":252,"column":59},"end":{"line":252,"column":76}}],"line":252},"81":{"loc":{"start":{"line":253,"column":32},"end":{"line":255,"column":33}},"type":"if","locations":[{"start":{"line":253,"column":32},"end":{"line":255,"column":33}},{"start":{"line":253,"column":32},"end":{"line":255,"column":33}}],"line":253},"82":{"loc":{"start":{"line":253,"column":36},"end":{"line":253,"column":106}},"type":"cond-expr","locations":[{"start":{"line":253,"column":85},"end":{"line":253,"column":91}},{"start":{"line":253,"column":94},"end":{"line":253,"column":106}}],"line":253},"83":{"loc":{"start":{"line":253,"column":36},"end":{"line":253,"column":82}},"type":"binary-expr","locations":[{"start":{"line":253,"column":36},"end":{"line":253,"column":65}},{"start":{"line":253,"column":69},"end":{"line":253,"column":82}}],"line":253},"84":{"loc":{"start":{"line":264,"column":20},"end":{"line":273,"column":21}},"type":"if","locations":[{"start":{"line":264,"column":20},"end":{"line":273,"column":21}},{"start":{"line":264,"column":20},"end":{"line":273,"column":21}}],"line":264},"85":{"loc":{"start":{"line":266,"column":28},"end":{"line":268,"column":29}},"type":"if","locations":[{"start":{"line":266,"column":28},"end":{"line":268,"column":29}},{"start":{"line":266,"column":28},"end":{"line":268,"column":29}}],"line":266},"86":{"loc":{"start":{"line":276,"column":12},"end":{"line":285,"column":13}},"type":"if","locations":[{"start":{"line":276,"column":12},"end":{"line":285,"column":13}},{"start":{"line":276,"column":12},"end":{"line":285,"column":13}}],"line":276},"87":{"loc":{"start":{"line":277,"column":16},"end":{"line":284,"column":17}},"type":"if","locations":[{"start":{"line":277,"column":16},"end":{"line":284,"column":17}},{"start":{"line":277,"column":16},"end":{"line":284,"column":17}}],"line":277},"88":{"loc":{"start":{"line":288,"column":12},"end":{"line":297,"column":13}},"type":"if","locations":[{"start":{"line":288,"column":12},"end":{"line":297,"column":13}},{"start":{"line":288,"column":12},"end":{"line":297,"column":13}}],"line":288},"89":{"loc":{"start":{"line":302,"column":8},"end":{"line":325,"column":9}},"type":"if","locations":[{"start":{"line":302,"column":8},"end":{"line":325,"column":9}},{"start":{"line":302,"column":8},"end":{"line":325,"column":9}}],"line":302},"90":{"loc":{"start":{"line":348,"column":8},"end":{"line":353,"column":9}},"type":"if","locations":[{"start":{"line":348,"column":8},"end":{"line":353,"column":9}},{"start":{"line":348,"column":8},"end":{"line":353,"column":9}}],"line":348},"91":{"loc":{"start":{"line":356,"column":8},"end":{"line":367,"column":9}},"type":"if","locations":[{"start":{"line":356,"column":8},"end":{"line":367,"column":9}},{"start":{"line":356,"column":8},"end":{"line":367,"column":9}}],"line":356},"92":{"loc":{"start":{"line":359,"column":16},"end":{"line":364,"column":17}},"type":"if","locations":[{"start":{"line":359,"column":16},"end":{"line":364,"column":17}},{"start":{"line":359,"column":16},"end":{"line":364,"column":17}}],"line":359}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/Project.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/Project.ts"],"names":[],"mappings":"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","sourcesContent":["import { lstatSync, existsSync, readFileSync, readdirSync, mkdirSync, unlinkSync, rmdirSync } from 'fs';\nimport { join } from 'path';\n\nimport { RuleSet } from './RuleSet';\nimport { GeneratorFactory } from './Generator';\nimport { ParserFactory } from './Parser';\nimport { Imposer } from './Imposer';\nimport { IPlugin, IRule } from './Interfaces';\nimport { Node } from './utils/Node';\n\ntype configurationOptions = {\n  configPath?: string;\n  buildFolder?: string;\n  projectFiles?: string;\n  projectRules?: string;\n  configs?: [];\n  plugins?: [];\n};\n\nexport class Project {\n  private _workingDir: string\n  private _configs: { name: string; features: string[] }[];\n  private _config: null | { name: string; features: string[] };\n  private _buildTarget: string;\n  private _plugins: IPlugin[] | null;\n  private _projectAST: Node;\n\n  private _ruleSet: RuleSet = new RuleSet();\n  private _parserFactory: ParserFactory = new ParserFactory();\n  private _generatorFactory: GeneratorFactory = new GeneratorFactory();\n  private _imposer: Imposer = new Imposer(this._parserFactory, this._generatorFactory, this._ruleSet);\n\n  constructor(options?: configurationOptions) {\n    this._workingDir = process.cwd();\n    options = options || {};\n\n    this._configs = [];\n    this._config = null;\n\n    let configPath:\n      | string\n      | {\n        pathType: string;\n        fullPath: string;\n        exists: boolean;\n      };\n    const configPaths = [\n      {\n        type: 'custom',\n        path: options.configPath,\n      },\n      {\n        type: 'smithery',\n        path: '.smithery',\n      },\n      {\n        type: 'package',\n        path: 'package.json',\n      },\n    ]\n      .map((path) => {\n        return {\n          pathType: path.type,\n          exists: path.path ? existsSync(join(this._workingDir, path.path)) : false,\n          fullPath: path.path ? join(this._workingDir, path.path) : '',\n        };\n      })\n      .filter((path) => path.exists);\n\n    configPaths.sort((a, b) => {\n      if (a.pathType === 'custom') {\n        return -1;\n      }\n\n      if (a.pathType !== 'custom' && b.pathType === 'custom') {\n        return 1;\n      }\n\n      if (a.pathType === 'smithery' && b.pathType === 'package') {\n        return -1;\n      }\n\n      if (a.pathType === 'package' && b.pathType === 'smithery') {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    configPath = configPaths[0];\n    configPath = configPath?.fullPath || '';\n\n    let config;\n    let sErrMess = '';\n\n    const errorText = 'Failed to read configuration for project ' + `at \"${this._workingDir}\". Error: ${sErrMess}`;\n    try {\n      const configContent = readFileSync(configPath, { encoding: 'utf-8' });\n      config = JSON.parse(configContent);\n      if (configPath.endsWith('package.json') && config.featureCLI) {\n        config = config.smithery;\n      }\n    } catch (err) {\n      // if options object given configs, buildfolder and projectfile path\n      // we can continue\n      if (options.configs && options.buildFolder && options.projectFiles) {\n        config = options;\n      }\n      if (err.code !== 'ENOENT') {\n        throw new Error(errorText);\n      } else {\n        sErrMess = err.message;\n      }\n    }\n\n    if (!config) {\n      // tslint:disable-next-line: no-console\n      console.log(errorText);\n      process.exit(1);\n    }\n\n    /**\n     * @todo:setup the model ->  add model for config validity checks and config building\n     */\n    // setup the configs\n    if (config.configs && typeof config.configs === 'string' && existsSync(join(this._workingDir, config.configs))) {\n      this._configs = this._getConfigFiles(join(this._workingDir, config.configs));\n    } else {\n      this._configs = options.configs || config.configs;\n    }\n\n    // setting up the src and destination for the build\n    this._buildTarget = options.buildFolder || config.buildFolder;\n\n    // take the plugins from the config reed or the options object\n    this._plugins = options.plugins || config.plugins;\n    if (this._plugins && this._plugins.length > 0) {\n      this._plugins.forEach((oPlugin) => this._loadPlugin(oPlugin));\n    }\n\n    if (\n      config.projectRules &&\n      typeof config.projectRules === 'string' &&\n      existsSync(join(this._workingDir, config.projectRules))\n    ) {\n      const aProjectRules = this._loadProjectRules(join(this._workingDir, config.projectRules));\n      this._ruleSet.addMultipleRules(aProjectRules);\n    }\n\n    // take the project file path from the options or from the readed config;\n    this._projectAST =\n      this._parserFactory\n        .getParser('DIR')\n        ?.parse(join(this._workingDir, options.projectFiles || config.projectFiles)) || new Node();\n  }\n\n  public build(configName: string): void {\n    if (configName) {\n      this.setConfig(configName);\n    }\n\n    if (this._config === null) {\n      const oDefault = this._configs.filter((config) => config.name === 'default');\n      if (oDefault.length === 0) {\n        throw new Error('No configuration given, therefore no build possible!');\n      } else {\n        // tslint:disable-next-line: no-console\n        console.warn('No configuration set, switching to default');\n        this._config = oDefault[0];\n      }\n    }\n\n    // tslint:disable-next-line: no-console\n    console.log('Build start for config \"' + this._config.name + '\"');\n    // tslint:disable-next-line: no-console\n    console.log('building...');\n    let aFeatures = this._config.features;\n    if (!aFeatures.includes('Base')) {\n      throw new Error('No Base features set up, ');\n    }\n\n    // now we know the features contains base, therefore we can use it.\n    // exclude base from the features to be applied.\n    aFeatures = aFeatures.filter((sFeatureName) => sFeatureName !== 'Base');\n\n    const baseFST: Node[] = this._projectAST?.children?.filter((oChild) => oChild.name === 'Base') || [];\n    if (baseFST.length === 0) {\n      throw new Error('Base feature is not at the source code, therefore we can not start');\n    }\n\n    let resultFST: Node | Node[] = baseFST[0];\n    resultFST.name = 'root';\n    resultFST.featureName = 'BASE';\n\n    while (aFeatures.length > 0) {\n      // Taking aFeatures like a queue\n      const curFeature = aFeatures.shift() || '';\n      // tslint:disable-next-line: no-console\n      console.log(`Imposing feature: ${curFeature}`);\n      const featuresArray = this._projectAST?.children?.filter((oChild) => oChild.name === curFeature) || [];\n      if (featuresArray.length === 0) {\n        throw new Error(`[${curFeature}] feature is not at the source code, stopped building`);\n      }\n\n      const featureFST: Node = featuresArray[0];\n      featureFST.name = 'root';\n      featureFST.featureName = curFeature.toUpperCase();\n      /**\n       * @todo -> hier eine Lösung schaffen!!!\n       */\n      resultFST = this._imposer.impose(\n        resultFST,\n        featureFST,\n        this._parserFactory.getParser('DIR')?.getVisitorKeys() || {},\n      );\n    }\n\n    // check if build target already exists and clear it\n    this._clearBuildTarget(this._buildTarget);\n    // create the build target newly\n    mkdirSync(this._buildTarget);\n    this._generatorFactory.getGenerator('DIR')?.generate(resultFST, {\n      filePath: join(this._workingDir, this._buildTarget),\n    });\n\n    // tslint:disable-next-line: no-console\n    console.log('Build done. -> Have fun.');\n  }\n\n  public setConfig(configName: string): void {\n    if (this._configs === null) {\n      throw new Error('No configs given');\n    }\n\n    const oConfig = this._configs.filter((config) => config.name === configName);\n    if (oConfig.length === 0) {\n      throw new Error('Config for ' + configName + ' does not exist withing configs');\n    }\n\n    this._config = oConfig[0];\n  }\n\n  private _getConfigFiles(dirPath: string) {\n    if (existsSync(dirPath)) {\n      return readdirSync(dirPath)\n        .filter((fn) => fn.endsWith('.config'))\n        .map((config) => {\n          return {\n            name: config.replace(dirPath + '/', '').replace('.config', ''),\n            features: readFileSync(join(dirPath, config), { encoding: 'utf-8' })\n              .split(/\\r?\\n/)\n              .filter((sFeature) => {\n                return sFeature !== '';\n              }),\n          };\n        });\n    } else {\n      throw new Error('No config folder present, therefore no configs');\n    }\n  }\n\n  private _loadPlugin(plugin: IPlugin) {\n    // tslint:disable-next-line: no-console\n    console.log('Try to load plugin: ' + plugin.name);\n    let module: IPlugin | undefined = this._loadLocally(plugin.name);\n    let globalStarter = false;\n    if (!module && process.argv[1].indexOf('index.js') > -1) {\n      globalStarter = true;\n      module = this._loadGlobally(plugin.name);\n    }\n\n    if (module !== undefined) {\n      if (module.parser.fileEnding && module.parser.parser) {\n        if (plugin.config && plugin.config.parser) {\n          Object.keys(plugin.config.parser).forEach((key) => {\n            const setter = `set${this._capitalize(key)}`;\n            if (module !== undefined && typeof module.parser.parser[setter] !== 'undefined') {\n              if (plugin.config?.parser) {\n                this._invokeFunktion(module.parser.parser, setter, plugin.config?.parser[key]);\n              }\n            } else {\n              // Log.warn(`\\nNo suitable setter for configuration ${sKey} found. Will be ignored!!`)\n              // tslint:disable-next-line: no-console\n              console.log(`\\nNo suitable setter for configuration ${key} found. Will be ignored!!`);\n            }\n          });\n        }\n\n        if (Array.isArray(module.parser.fileEnding)) {\n          module.parser.fileEnding.forEach((sEnding) => {\n            if (module !== undefined) {\n              this._parserFactory.addParser(module.parser.parser, sEnding);\n            }\n          });\n        } else {\n          this._parserFactory.addParser(module.parser.parser, module.parser.fileEnding);\n        }\n      }\n\n      if (module.generator !== undefined) {\n        if (module.generator.fileEnding !== undefined && module.generator.generator !== undefined) {\n          if (plugin.config && plugin.config.generator) {\n            Object.keys(plugin.config.generator).forEach((sKey) => {\n              const setter = `set${this._capitalize(sKey)}`;\n              if (typeof module?.generator.generator[setter] !== 'undefined') {\n                if (plugin.config?.generator) {\n                  this._invokeFunktion(module.generator.generator, setter, plugin.config.generator[sKey]);\n                }\n              } else {\n                // Log.warn(`\\nNo suitable setter for configuration ${sKey} found. Will be ignored!!`)\n                // tslint:disable-next-line: no-console\n                console.log(`\\nNo suitable setter for configuration ${sKey} found. Will be ignored!!`);\n              }\n            });\n          }\n          if (Array.isArray(module.generator.fileEnding)) {\n            module.generator.fileEnding.forEach((ending: string) => {\n              if (module !== undefined) {\n                this._generatorFactory.addGenerator(module.generator.generator, ending);\n              }\n            });\n          } else {\n            this._generatorFactory.addGenerator(module.generator.generator, module.generator.fileEnding);\n          }\n        }\n      }\n\n      if (module.rules) {\n        if (!Array.isArray(module.rules)) {\n          // Log.error(`The rules provided by the plugin ${sPluginName} are not as an array, therefore they can not be loaded`);\n          // tslint:disable-next-line: no-console\n          console.error(\n            `The rules provided by the plugin ${plugin.name} are not as an array, therefore they can not be loaded`,\n          );\n        } else {\n          this._ruleSet.addMultipleRules(module.rules);\n        }\n      }\n    } else {\n      if (globalStarter) {\n        // Log.error('Plugin could not found locally and globally install the missing plugin and restart the process.');\n        // tslint:disable-next-line: no-console\n        console.log('Plugin could not found locally and globally install the missing plugin and restart the process.');\n      } else {\n        // Log.error('Plugin could not be found, install and the missing plugin and restart the process.');\n        // tslint:disable-next-line: no-console\n        console.log('Plugin could not be found, install and the missing plugin and restart the process.');\n      }\n      process.exit(1);\n    }\n  }\n\n  private _loadProjectRules(rulePath: string): IRule[] {\n    if (lstatSync(rulePath).isDirectory()) {\n      const rules = readdirSync(rulePath);\n      const loadedRules = rules\n        .map((sRulePath) => {\n          try {\n            return require(join(rulePath, sRulePath));\n          } catch (err) {\n            return;\n          }\n        })\n        .filter((oRule) => {\n          return oRule;\n        });\n      return loadedRules;\n    } else {\n      try {\n        return [require(rulePath)];\n      } catch (err) {\n        return [];\n      }\n    }\n  }\n\n  private _loadLocally(pluginPath: string): IPlugin | undefined {\n    try {\n      return require(join(process.cwd(), 'node_modules', pluginPath));\n    } catch (err) {\n      return;\n    }\n  }\n\n  private _loadGlobally(pluginPath: string): IPlugin | undefined {\n    try {\n      return require(join(process.argv[1].replace('index.js', ''), '../../../', pluginPath));\n    } catch (err) {\n      return;\n    }\n  }\n\n  private _capitalize(value: string): string {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeFunktion(object: any, fktName: string, argumentMap: { [key: string]: any }) {\n    if (Array.isArray(argumentMap)) {\n      object[fktName](...argumentMap);\n    } else {\n      object[fktName](argumentMap);\n    }\n  }\n\n  private _clearBuildTarget(buildPath: string): void {\n    if (existsSync(buildPath)) {\n      readdirSync(buildPath).forEach((file: string) => {\n        const curPath = join(buildPath, file);\n        if (lstatSync(curPath).isDirectory()) {\n          this._clearBuildTarget(curPath);\n        } else {\n          unlinkSync(curPath);\n        }\n      });\n      rmdirSync(buildPath);\n    }\n  }\n}\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Rule.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\Rule.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":35}},"3":{"start":{"line":7,"column":8},"end":{"line":15,"column":9}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":44}},"5":{"start":{"line":10,"column":13},"end":{"line":15,"column":9}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":46}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":35}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":116}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":54}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":63}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":73}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":103}},"14":{"start":{"line":23,"column":47},"end":{"line":23,"column":87}},"15":{"start":{"line":27,"column":23},"end":{"line":27,"column":133}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":22}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":67}},"18":{"start":{"line":34,"column":24},"end":{"line":38,"column":10}},"19":{"start":{"line":39,"column":8},"end":{"line":39,"column":77}},"20":{"start":{"line":39,"column":40},"end":{"line":39,"column":75}},"21":{"start":{"line":103,"column":21},"end":{"line":115,"column":35}},"22":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"23":{"start":{"line":106,"column":16},"end":{"line":106,"column":34}},"24":{"start":{"line":108,"column":12},"end":{"line":110,"column":13}},"25":{"start":{"line":109,"column":16},"end":{"line":109,"column":29}},"26":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"27":{"start":{"line":112,"column":16},"end":{"line":112,"column":36}},"28":{"start":{"line":115,"column":30},"end":{"line":115,"column":34}},"29":{"start":{"line":116,"column":8},"end":{"line":116,"column":62}},"30":{"start":{"line":117,"column":27},"end":{"line":117,"column":52}},"31":{"start":{"line":118,"column":20},"end":{"line":118,"column":21}},"32":{"start":{"line":119,"column":23},"end":{"line":119,"column":25}},"33":{"start":{"line":120,"column":8},"end":{"line":140,"column":11}},"34":{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},"35":{"start":{"line":123,"column":16},"end":{"line":123,"column":24}},"36":{"start":{"line":125,"column":36},"end":{"line":125,"column":93}},"37":{"start":{"line":126,"column":12},"end":{"line":126,"column":35}},"38":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"39":{"start":{"line":130,"column":16},"end":{"line":130,"column":44}},"40":{"start":{"line":132,"column":12},"end":{"line":139,"column":13}},"41":{"start":{"line":133,"column":33},"end":{"line":133,"column":63}},"42":{"start":{"line":134,"column":16},"end":{"line":136,"column":17}},"43":{"start":{"line":135,"column":20},"end":{"line":135,"column":36}},"44":{"start":{"line":137,"column":16},"end":{"line":137,"column":39}},"45":{"start":{"line":138,"column":16},"end":{"line":138,"column":60}},"46":{"start":{"line":141,"column":8},"end":{"line":145,"column":11}},"47":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"48":{"start":{"line":143,"column":16},"end":{"line":143,"column":49}},"49":{"start":{"line":146,"column":8},"end":{"line":151,"column":10}},"50":{"start":{"line":154,"column":8},"end":{"line":154,"column":74}},"51":{"start":{"line":154,"column":38},"end":{"line":154,"column":72}},"52":{"start":{"line":157,"column":8},"end":{"line":201,"column":9}},"53":{"start":{"line":159,"column":12},"end":{"line":197,"column":13}},"54":{"start":{"line":161,"column":34},"end":{"line":161,"column":85}},"55":{"start":{"line":162,"column":33},"end":{"line":162,"column":37}},"56":{"start":{"line":163,"column":16},"end":{"line":191,"column":17}},"57":{"start":{"line":166,"column":38},"end":{"line":166,"column":79}},"58":{"start":{"line":168,"column":20},"end":{"line":172,"column":21}},"59":{"start":{"line":169,"column":24},"end":{"line":171,"column":25}},"60":{"start":{"line":170,"column":28},"end":{"line":170,"column":59}},"61":{"start":{"line":174,"column":20},"end":{"line":176,"column":21}},"62":{"start":{"line":175,"column":24},"end":{"line":175,"column":50}},"63":{"start":{"line":177,"column":20},"end":{"line":190,"column":21}},"64":{"start":{"line":178,"column":41},"end":{"line":178,"column":55}},"65":{"start":{"line":179,"column":24},"end":{"line":181,"column":25}},"66":{"start":{"line":180,"column":28},"end":{"line":180,"column":37}},"67":{"start":{"line":182,"column":40},"end":{"line":182,"column":53}},"68":{"start":{"line":183,"column":24},"end":{"line":185,"column":25}},"69":{"start":{"line":184,"column":28},"end":{"line":184,"column":41}},"70":{"start":{"line":186,"column":24},"end":{"line":189,"column":25}},"71":{"start":{"line":188,"column":28},"end":{"line":188,"column":41}},"72":{"start":{"line":193,"column":16},"end":{"line":193,"column":28}},"73":{"start":{"line":196,"column":16},"end":{"line":196,"column":28}},"74":{"start":{"line":200,"column":12},"end":{"line":200,"column":25}},"75":{"start":{"line":204,"column":25},"end":{"line":204,"column":42}},"76":{"start":{"line":205,"column":18},"end":{"line":205,"column":46}},"77":{"start":{"line":206,"column":8},"end":{"line":223,"column":9}},"78":{"start":{"line":208,"column":12},"end":{"line":219,"column":13}},"79":{"start":{"line":209,"column":34},"end":{"line":209,"column":47}},"80":{"start":{"line":210,"column":16},"end":{"line":215,"column":17}},"81":{"start":{"line":211,"column":20},"end":{"line":211,"column":33}},"82":{"start":{"line":214,"column":20},"end":{"line":214,"column":46}},"83":{"start":{"line":218,"column":16},"end":{"line":218,"column":29}},"84":{"start":{"line":222,"column":12},"end":{"line":222,"column":45}},"85":{"start":{"line":226,"column":0},"end":{"line":226,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":22},"end":{"line":21,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":27},"end":{"line":24,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":38},"end":{"line":23,"column":39}},"loc":{"start":{"line":23,"column":47},"end":{"line":23,"column":87}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":36},"end":{"line":29,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":40},"end":{"line":32,"column":5}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":29},"end":{"line":40,"column":5}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":39,"column":27},"end":{"line":39,"column":28}},"loc":{"start":{"line":39,"column":40},"end":{"line":39,"column":75}},"line":39},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":35},"end":{"line":152,"column":5}},"line":41},"8":{"name":"(anonymous_8)","decl":{"start":{"line":104,"column":17},"end":{"line":104,"column":18}},"loc":{"start":{"line":104,"column":28},"end":{"line":114,"column":9}},"line":104},"9":{"name":"(anonymous_9)","decl":{"start":{"line":115,"column":20},"end":{"line":115,"column":21}},"loc":{"start":{"line":115,"column":30},"end":{"line":115,"column":34}},"line":115},"10":{"name":"(anonymous_10)","decl":{"start":{"line":121,"column":17},"end":{"line":121,"column":18}},"loc":{"start":{"line":121,"column":28},"end":{"line":127,"column":9}},"line":121},"11":{"name":"(anonymous_11)","decl":{"start":{"line":128,"column":21},"end":{"line":128,"column":22}},"loc":{"start":{"line":128,"column":32},"end":{"line":140,"column":9}},"line":128},"12":{"name":"(anonymous_12)","decl":{"start":{"line":141,"column":36},"end":{"line":141,"column":37}},"loc":{"start":{"line":141,"column":45},"end":{"line":145,"column":9}},"line":141},"13":{"name":"(anonymous_13)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":37},"end":{"line":155,"column":5}},"line":153},"14":{"name":"(anonymous_14)","decl":{"start":{"line":154,"column":27},"end":{"line":154,"column":28}},"loc":{"start":{"line":154,"column":38},"end":{"line":154,"column":72}},"line":154},"15":{"name":"(anonymous_15)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":34},"end":{"line":202,"column":5}},"line":156},"16":{"name":"(anonymous_16)","decl":{"start":{"line":203,"column":4},"end":{"line":203,"column":5}},"loc":{"start":{"line":203,"column":43},"end":{"line":224,"column":5}},"line":203}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":15,"column":9}},{"start":{"line":7,"column":8},"end":{"line":15,"column":9}}],"line":7},"1":{"loc":{"start":{"line":10,"column":13},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":13},"end":{"line":15,"column":9}},{"start":{"line":10,"column":13},"end":{"line":15,"column":9}}],"line":10},"2":{"loc":{"start":{"line":17,"column":32},"end":{"line":17,"column":115}},"type":"binary-expr","locations":[{"start":{"line":17,"column":33},"end":{"line":17,"column":97}},{"start":{"line":17,"column":102},"end":{"line":17,"column":115}}],"line":17},"3":{"loc":{"start":{"line":17,"column":33},"end":{"line":17,"column":97}},"type":"cond-expr","locations":[{"start":{"line":17,"column":68},"end":{"line":17,"column":74}},{"start":{"line":17,"column":77},"end":{"line":17,"column":97}}],"line":17},"4":{"loc":{"start":{"line":17,"column":33},"end":{"line":17,"column":65}},"type":"binary-expr","locations":[{"start":{"line":17,"column":33},"end":{"line":17,"column":46}},{"start":{"line":17,"column":50},"end":{"line":17,"column":65}}],"line":17},"5":{"loc":{"start":{"line":27,"column":23},"end":{"line":27,"column":133}},"type":"binary-expr","locations":[{"start":{"line":27,"column":23},"end":{"line":27,"column":73}},{"start":{"line":27,"column":77},"end":{"line":27,"column":133}}],"line":27},"6":{"loc":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},{"start":{"line":105,"column":12},"end":{"line":107,"column":13}}],"line":105},"7":{"loc":{"start":{"line":108,"column":12},"end":{"line":110,"column":13}},"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":110,"column":13}},{"start":{"line":108,"column":12},"end":{"line":110,"column":13}}],"line":108},"8":{"loc":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},{"start":{"line":111,"column":12},"end":{"line":113,"column":13}}],"line":111},"9":{"loc":{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},{"start":{"line":122,"column":12},"end":{"line":124,"column":13}}],"line":122},"10":{"loc":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},{"start":{"line":129,"column":12},"end":{"line":131,"column":13}}],"line":129},"11":{"loc":{"start":{"line":132,"column":12},"end":{"line":139,"column":13}},"type":"if","locations":[{"start":{"line":132,"column":12},"end":{"line":139,"column":13}},{"start":{"line":132,"column":12},"end":{"line":139,"column":13}}],"line":132},"12":{"loc":{"start":{"line":134,"column":16},"end":{"line":136,"column":17}},"type":"if","locations":[{"start":{"line":134,"column":16},"end":{"line":136,"column":17}},{"start":{"line":134,"column":16},"end":{"line":136,"column":17}}],"line":134},"13":{"loc":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},{"start":{"line":142,"column":12},"end":{"line":144,"column":13}}],"line":142},"14":{"loc":{"start":{"line":157,"column":8},"end":{"line":201,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":201,"column":9}},{"start":{"line":157,"column":8},"end":{"line":201,"column":9}}],"line":157},"15":{"loc":{"start":{"line":157,"column":12},"end":{"line":157,"column":65}},"type":"binary-expr","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":21}},{"start":{"line":157,"column":25},"end":{"line":157,"column":65}}],"line":157},"16":{"loc":{"start":{"line":159,"column":12},"end":{"line":197,"column":13}},"type":"if","locations":[{"start":{"line":159,"column":12},"end":{"line":197,"column":13}},{"start":{"line":159,"column":12},"end":{"line":197,"column":13}}],"line":159},"17":{"loc":{"start":{"line":168,"column":27},"end":{"line":168,"column":78}},"type":"binary-expr","locations":[{"start":{"line":168,"column":27},"end":{"line":168,"column":57}},{"start":{"line":168,"column":61},"end":{"line":168,"column":78}}],"line":168},"18":{"loc":{"start":{"line":169,"column":24},"end":{"line":171,"column":25}},"type":"if","locations":[{"start":{"line":169,"column":24},"end":{"line":171,"column":25}},{"start":{"line":169,"column":24},"end":{"line":171,"column":25}}],"line":169},"19":{"loc":{"start":{"line":174,"column":20},"end":{"line":176,"column":21}},"type":"if","locations":[{"start":{"line":174,"column":20},"end":{"line":176,"column":21}},{"start":{"line":174,"column":20},"end":{"line":176,"column":21}}],"line":174},"20":{"loc":{"start":{"line":179,"column":24},"end":{"line":181,"column":25}},"type":"if","locations":[{"start":{"line":179,"column":24},"end":{"line":181,"column":25}},{"start":{"line":179,"column":24},"end":{"line":181,"column":25}}],"line":179},"21":{"loc":{"start":{"line":183,"column":24},"end":{"line":185,"column":25}},"type":"if","locations":[{"start":{"line":183,"column":24},"end":{"line":185,"column":25}},{"start":{"line":183,"column":24},"end":{"line":185,"column":25}}],"line":183},"22":{"loc":{"start":{"line":183,"column":28},"end":{"line":183,"column":115}},"type":"binary-expr","locations":[{"start":{"line":183,"column":28},"end":{"line":183,"column":56}},{"start":{"line":183,"column":60},"end":{"line":183,"column":115}}],"line":183},"23":{"loc":{"start":{"line":186,"column":24},"end":{"line":189,"column":25}},"type":"if","locations":[{"start":{"line":186,"column":24},"end":{"line":189,"column":25}},{"start":{"line":186,"column":24},"end":{"line":189,"column":25}}],"line":186},"24":{"loc":{"start":{"line":186,"column":28},"end":{"line":187,"column":159}},"type":"binary-expr","locations":[{"start":{"line":186,"column":28},"end":{"line":186,"column":56}},{"start":{"line":187,"column":28},"end":{"line":187,"column":159}}],"line":186},"25":{"loc":{"start":{"line":187,"column":30},"end":{"line":187,"column":158}},"type":"binary-expr","locations":[{"start":{"line":187,"column":30},"end":{"line":187,"column":85}},{"start":{"line":187,"column":89},"end":{"line":187,"column":158}}],"line":187},"26":{"loc":{"start":{"line":206,"column":8},"end":{"line":223,"column":9}},"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":223,"column":9}},{"start":{"line":206,"column":8},"end":{"line":223,"column":9}}],"line":206},"27":{"loc":{"start":{"line":208,"column":12},"end":{"line":219,"column":13}},"type":"if","locations":[{"start":{"line":208,"column":12},"end":{"line":219,"column":13}},{"start":{"line":208,"column":12},"end":{"line":219,"column":13}}],"line":208},"28":{"loc":{"start":{"line":208,"column":16},"end":{"line":208,"column":70}},"type":"binary-expr","locations":[{"start":{"line":208,"column":16},"end":{"line":208,"column":43}},{"start":{"line":208,"column":47},"end":{"line":208,"column":70}}],"line":208},"29":{"loc":{"start":{"line":210,"column":16},"end":{"line":215,"column":17}},"type":"if","locations":[{"start":{"line":210,"column":16},"end":{"line":215,"column":17}},{"start":{"line":210,"column":16},"end":{"line":215,"column":17}}],"line":210}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/Rule.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/Rule.ts"],"names":[],"mappings":"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","sourcesContent":["import * as cssWhat from 'css-what';\nimport { IRule } from './Interfaces';\nimport { Node } from './utils/Node';\nimport { Imposer } from './Imposer';\n\ndeclare type ExtendedSelector = cssWhat.Selector & { level: number, name?: string, action?: string, attributes?: ExtendedSelector[] };\n\ndeclare type SelectorCheck = {\n  pathRegex: RegExp,\n  propertyChecks: { [key: number]: ExtendedSelector },\n  attributes: [],\n  name: ''\n}\n\nexport class Rule {\n  private _targetNodes: string[];\n  private _selector: string;\n  private _selectorFeature: string;\n  private _baseChecks: SelectorCheck[];\n  private _featureChecks: SelectorCheck[];\n  private _resolveCallback: (baseFST: Node, featureFST: Node, context: Imposer) => Node;\n\n  constructor(rule: IRule) {\n    if (Array.isArray(rule.target)) {\n      this._targetNodes = rule.target;\n    } else if (typeof rule.target === 'string') {\n      this._targetNodes = [rule.target];\n    } else {\n      this._targetNodes = [];\n    }\n\n    this._selector = rule.selector;\n    this._selectorFeature = rule?.selectorFeature || rule.selector;\n    this._resolveCallback = rule.apply.bind(this);\n    this._baseChecks = this._setupSelector(this._selector);\n    this._featureChecks = this._setupSelector(this._selectorFeature);\n  }\n\n  public supportsLanguage(lang: string): boolean {\n    return this._targetNodes.find((tar: string) => tar.toLowerCase() === lang.toLowerCase()) !== undefined;\n  }\n\n  public isMatching(baseFST: Node, featureFST: Node): boolean {\n    // check if the path contains the correct form for the css selector\n    const result: boolean =\n      this._checkNodeMatching(baseFST, this._baseChecks) && this._checkNodeMatching(featureFST, this._featureChecks);\n    return result;\n  }\n\n  public apply(baseFST: Node, featureFST: Node, context: Imposer): Node {\n    return this._resolveCallback(baseFST, featureFST, context);\n  }\n\n  private _setupSelector(selector: string): SelectorCheck[] {\n    const cssList: cssWhat.Selector[][] = cssWhat.parse(selector, {\n      lowerCaseTags: false,\n      lowerCaseAttributeNames: false,\n      xmlMode: false,\n    });\n\n    return cssList.map((cssPart: cssWhat.Selector[]) => this._createSelectorChecks(cssPart));\n  }\n\n  private _createSelectorChecks(cssPart: cssWhat.Selector[]): SelectorCheck {\n    // #region selectorBuildExplanation\n\n    // Test mit mehreren sollte zu Regex führen\n    // File[ending]>Whatever Test,\n    // File[ending=JS]>Whatever Test,\n    // Resultat: File\\.Whatever\\.[\\w.]*Text\n    /*\n     * Array(6):\n        0: {type: \"tag\", name: \"file\"}\n        1: {type: \"attribute\", name: \"ending\", action: \"exists\", value: \"\", ignoreCase: false},\n           {type: \"attribute\", name: \"ending\", action: \"equals\", value: \"JS\", ignoreCase: false}\n        2: {type: \"child\"}\n        3: {type: \"tag\", name: \"whatever\"}\n        4: {type: \"descendant\"}\n        5: {type: \"tag\", name: \"test\"}\n     */\n    /*\n    var temp = cssList.map((oToken) => {\n        if (oToken.type === \"tag\") {\n            return oToken.name;\n        }\n        if (oToken.type === \"child\") {\n            return \"\\\\.\";\n        }\n        if (oToken.type === \"descendant\") {\n            return \"\\\\.[\\\\w.]*\"\n        }\n    }).filter(oPart => oPart);\n    //the last tag has to be at the end of the string.\n    temp[temp.length - 1] = \"(\" + temp[temp.length - 1] + \")$\"\n    var pathRegExp = new RegExp(temp.join(''));\n    var level = 0;\n    var checks = {};\n    cssList.map((oToken) => {\n        if (oToken.type === \"tag\") {\n            level++;\n        }\n        oToken.level = level;\n        return oToken;\n    }).forEach((oToken) => {\n        if (oToken.type === \"tag\") {\n            checks[oToken.level] = oToken;\n        }\n        if (oToken.type === \"attribute\") {\n            var attributes = checks[oToken.level]['attributes'];\n            if (!attributes) {\n                attributes = [];\n            }\n            attributes.push(oToken);\n            checks[oToken.level]['attributes'] = attributes;\n        }\n    });\n    Object.keys(checks).forEach((sKey) => {\n        if (!checks[sKey].attributes) {\n            delete checks[sKey]\n        }\n    });\n    return {\n        pathRegex: pathRegExp,\n        propertyChecks: checks\n    }*/\n    //#endregion\n    const temp = cssPart\n      .map((token: cssWhat.Selector) => {\n        if (token.type === 'tag') {\n          return token.name;\n        }\n        if (token.type === 'child') {\n          return '\\\\.';\n        }\n        if (token.type === 'descendant') {\n          return '\\\\.[\\\\w.]*';\n        }\n      })\n      .filter((part) => part);\n\n    temp[temp.length - 1] = `(${temp[temp.length - 1]})$`;\n    const pathRegExp: RegExp = new RegExp(temp.join(''));\n    let level: number = 0;\n    const checks: { [key: number]: ExtendedSelector } = {};\n    cssPart\n      .map((token: cssWhat.Selector) => {\n        if (token.type === 'tag') {\n          level++;\n        }\n        const refactoredToken: ExtendedSelector = { ...token, level: level };\n        return refactoredToken;\n      })\n      .forEach((token: ExtendedSelector) => {\n        if (token.type === 'tag') {\n          checks[token.level] = token;\n        }\n        if (token.type === 'attribute') {\n          let attributes = checks[token.level].attributes;\n          if (!attributes) {\n            attributes = [];\n          }\n          attributes.push(token);\n          checks[token.level].attributes = attributes;\n        }\n      });\n\n    Object.keys(checks).forEach((key: string) => {\n      if (!checks[parseInt(key, 10)].attributes) {\n        delete checks[parseInt(key, 10)];\n      }\n    });\n\n    return {\n      pathRegex: pathRegExp,\n      propertyChecks: checks,\n      attributes: [],\n      name: ''\n    };\n  }\n\n  private _checkNodeMatching(node: Node, checks: SelectorCheck[]) {\n    return checks.some((check) => this._singleNodeCheck(node, check));\n  }\n\n  private _singleNodeCheck(node: Node, check: SelectorCheck): boolean {\n    if (node.path && check.pathRegex.exec(node.path) !== null) {\n      // check if the properties or the properties of the parents match the css selector\n      if (Object.keys(check.propertyChecks).length > 0) {\n        // check bottom to top\n        const checkKeys: string[] = Object.keys(check.propertyChecks).slice().reverse();\n        let latestNode: Node = node;\n        for (const index of checkKeys) {\n          /* 0: {type: \"tag\", name: \"file\"} \n             1: {type: \"attribute\", name: \"ending\", action: \"exists\", value: \"\", ignoreCase: false} */\n          const checkProp = check.propertyChecks[parseInt(index, 10)];\n          // iterate upwards until we found the correct one or the root node\n          while (latestNode.type !== check.name && latestNode.parent) {\n            if (latestNode.parent) {\n              latestNode = latestNode.parent;\n            }\n          }\n\n          //Just to ensure they are not undefined ... (Hello TypeScript -_-)\n          if (typeof checkProp.attributes === 'undefined') {\n            checkProp.attributes = [];\n          }\n\n          for (const attributeCheck of checkProp.attributes) {\n            const attCheck = attributeCheck as cssWhat.AttributeSelector;\n            if (!attCheck.name) {\n              continue;\n            }\n            const attName: string = attCheck.name;\n            if (attCheck.action === 'exists' && typeof latestNode.getAttribute(attName) === 'undefined') {\n              return false;\n            }\n            if (attCheck.action === 'equals' &&\n              !(typeof latestNode.getAttribute(attName) !== 'undefined' && this._attributeFits(latestNode.getAttribute(attName), attCheck.value))) {\n              return false;\n            }\n          }\n        }\n        // if everything matches we return with true;\n        return true;\n      } else {\n        return true\n      }\n    } else {\n      return false;\n    }\n  }\n\n  private _attributeFits(nodeAtt: string, expectedValue: string): boolean {\n    const objRegex: RegExp = /\\{(\\w+)=(\\w+)\\}/;\n    const m = objRegex.exec(expectedValue);\n\n    if (m !== null) {\n      // The result can be accessed through the 'm'-variable.\n      if (typeof nodeAtt === 'object' && !Array.isArray(nodeAtt)) {\n        const attribute = nodeAtt[m[1]];\n        if (typeof attribute === 'object') {\n          return false;\n        } else {\n          return attribute === m[2];\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return nodeAtt === expectedValue;\n    }\n  }\n}"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\rules\\file-impose.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\rules\\file-impose.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":37,"column":2}},"4":{"start":{"line":9,"column":27},"end":{"line":9,"column":79}},"5":{"start":{"line":10,"column":30},"end":{"line":10,"column":85}},"6":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"7":{"start":{"line":12,"column":12},"end":{"line":12,"column":108}},"8":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"9":{"start":{"line":15,"column":12},"end":{"line":15,"column":99}},"10":{"start":{"line":17,"column":24},"end":{"line":17,"column":156}},"11":{"start":{"line":18,"column":27},"end":{"line":18,"column":165}},"12":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"13":{"start":{"line":20,"column":12},"end":{"line":20,"column":68}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":50}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":56}},"16":{"start":{"line":25,"column":29},"end":{"line":25,"column":93}},"17":{"start":{"line":27,"column":30},"end":{"line":27,"column":48}},"18":{"start":{"line":28,"column":33},"end":{"line":28,"column":94}},"19":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"20":{"start":{"line":30,"column":12},"end":{"line":30,"column":83}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":72}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":11},"end":{"line":6,"column":12}},"loc":{"start":{"line":6,"column":45},"end":{"line":34,"column":5}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"1":{"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":41}},"type":"binary-expr","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":23}},{"start":{"line":11,"column":27},"end":{"line":11,"column":41}}],"line":11},"2":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"3":{"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":51}},"type":"binary-expr","locations":[{"start":{"line":14,"column":12},"end":{"line":14,"column":28}},{"start":{"line":14,"column":32},"end":{"line":14,"column":51}}],"line":14},"4":{"loc":{"start":{"line":17,"column":24},"end":{"line":17,"column":156}},"type":"cond-expr","locations":[{"start":{"line":17,"column":112},"end":{"line":17,"column":118}},{"start":{"line":17,"column":121},"end":{"line":17,"column":156}}],"line":17},"5":{"loc":{"start":{"line":17,"column":24},"end":{"line":17,"column":109}},"type":"binary-expr","locations":[{"start":{"line":17,"column":24},"end":{"line":17,"column":92}},{"start":{"line":17,"column":96},"end":{"line":17,"column":109}}],"line":17},"6":{"loc":{"start":{"line":17,"column":130},"end":{"line":17,"column":151}},"type":"binary-expr","locations":[{"start":{"line":17,"column":130},"end":{"line":17,"column":145}},{"start":{"line":17,"column":149},"end":{"line":17,"column":151}}],"line":17},"7":{"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":165}},"type":"cond-expr","locations":[{"start":{"line":18,"column":118},"end":{"line":18,"column":124}},{"start":{"line":18,"column":127},"end":{"line":18,"column":165}}],"line":18},"8":{"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":115}},"type":"binary-expr","locations":[{"start":{"line":18,"column":27},"end":{"line":18,"column":98}},{"start":{"line":18,"column":102},"end":{"line":18,"column":115}}],"line":18},"9":{"loc":{"start":{"line":18,"column":136},"end":{"line":18,"column":160}},"type":"binary-expr","locations":[{"start":{"line":18,"column":136},"end":{"line":18,"column":154}},{"start":{"line":18,"column":158},"end":{"line":18,"column":160}}],"line":18},"10":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"11":{"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":35}},"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":20}},{"start":{"line":19,"column":24},"end":{"line":19,"column":35}}],"line":19},"12":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/rules/file-impose.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/rules/file-impose.ts"],"names":[],"mappings":";;;AAEA,oCAAoC;AAGvB,QAAA,IAAI,GAAU;IACzB,KAAK,EAAE,CAAC,OAAa,EAAE,UAAgB,EAAE,OAAgB,EAAQ,EAAE;;QACjE,4EAA4E;QAC5E,MAAM,UAAU,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxE,MAAM,aAAa,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAE9E,IAAI,CAAC,UAAU,IAAI,CAAC,aAAa,EAAE;YACjC,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;SACjG;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC3C,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;SACxF;QAED,MAAM,OAAO,SAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,0CAAE,KAAK,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QACvG,MAAM,UAAU,SAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,0CAAE,KAAK,CAAC,UAAU,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QAEhH,IAAI,CAAC,OAAO,IAAI,CAAC,UAAU,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAA;SACxD;QAED,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QAC1C,UAAU,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;QAEhD,4BAA4B;QAC5B,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CACjC,OAAO,EACP,UAAU,EACV,UAAU,CAAC,cAAc,EAAE,CAC5B,CAAC;QAEF,8CAA8C;QAC9C,MAAM,aAAa,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;QACzC,MAAM,gBAAgB,GAAG,OAAO,CAAC,mBAAmB,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACvF,IAAI,CAAC,gBAAgB,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;SAAE;QAClG,aAAa,CAAC,OAAO,GAAG,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAChE,OAAO,aAAa,CAAC;IACvB,CAAC;IACD,MAAM,EAAE,CAAC,gBAAQ,CAAC,IAAI,EAAE,gBAAQ,CAAC,MAAM,CAAC;IACxC,QAAQ,EAAE,GAAG,gBAAQ,CAAC,IAAI,UAAU;CACrC,CAAC","sourcesContent":["import { IRule } from '../Interfaces';\nimport { Node } from '../utils/Node';\nimport { FileType } from '../enums';\nimport { Imposer } from '../Imposer';\n\nexport const rule: IRule = {\n  apply: (baseFST: Node, featureFST: Node, context: Imposer): Node => {\n    // 1. first step, parse the different files to get thier AST representations\n    const baseParser = context.getParserFactory().getParser(baseFST.ending);\n    const featureParser = context.getParserFactory().getParser(featureFST.ending);\n\n    if (!baseParser || !featureParser) {\n      throw new Error('Base-FeatureTree-Parser and Feature-FeatureTree-Parser not correctly defined');\n    }\n\n    if (!baseFST.content || !featureFST.content) {\n      throw new Error('BaseFeatureTree and FeatureFeatureTree does not contain source code');\n    }\n\n    const baseAST = context.getParserFactory().getParser(baseFST.ending)?.parse(baseFST.content || \"\", {});\n    const featureAST = context.getParserFactory().getParser(featureFST.ending)?.parse(featureFST.content || \"\", {});\n\n    if (!baseAST || !featureAST) {\n      throw new Error('BaseAST and FeatureAST not available')\n    }\n\n    baseAST.featureName = baseFST.featureName;\n    featureAST.featureName = featureFST.featureName;\n\n    // 2. impose both structures\n    const resultingAST = context.impose(\n      baseAST,\n      featureAST,\n      baseParser.getVisitorKeys(),\n    );\n\n    // 3. recreate the node for further processing\n    const returningNode = featureFST.clone();\n    const featureGenerator = context.getGeneratorFactory().getGenerator(featureFST.ending);\n    if (!featureGenerator) { throw new Error('No suitable Generator available for feature context'); }\n    returningNode.content = featureGenerator.generate(resultingAST);\n    return returningNode;\n  },\n  target: [FileType.File, FileType.Folder],\n  selector: `${FileType.File}[ending]`,\n};\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\rules\\index.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\rules\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":116}},"4":{"start":{"line":5,"column":84},"end":{"line":5,"column":110}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":70},"end":{"line":5,"column":71}},"loc":{"start":{"line":5,"column":82},"end":{"line":5,"column":112}},"line":5}},"branchMap":{},"s":{"0":0,"1":0,"2":0,"3":0,"4":0},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/rules/index.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/rules/index.ts"],"names":[],"mappings":";;;AAAA,6CAAmD;AAA1C,yGAAA,IAAI,OAAc","sourcesContent":["export { rule as fileImpose } from './file-impose';\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\RuleSet.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\RuleSet.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":32}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":33}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"6":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":32}},"8":{"start":{"line":14,"column":12},"end":{"line":14,"column":37}},"9":{"start":{"line":18,"column":29},"end":{"line":18,"column":49}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":68}},"11":{"start":{"line":19,"column":47},"end":{"line":19,"column":66}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":48}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":81}},"14":{"start":{"line":25,"column":59},"end":{"line":25,"column":78}},"15":{"start":{"line":28,"column":8},"end":{"line":28,"column":27}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":40}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":35}},"18":{"start":{"line":37,"column":26},"end":{"line":37,"column":37}},"19":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"20":{"start":{"line":39,"column":12},"end":{"line":39,"column":99}},"21":{"start":{"line":39,"column":55},"end":{"line":39,"column":97}},"22":{"start":{"line":41,"column":31},"end":{"line":41,"column":97}},"23":{"start":{"line":41,"column":60},"end":{"line":41,"column":96}},"24":{"start":{"line":42,"column":8},"end":{"line":45,"column":9}},"25":{"start":{"line":44,"column":12},"end":{"line":44,"column":133}},"26":{"start":{"line":46,"column":8},"end":{"line":46,"column":33}},"27":{"start":{"line":49,"column":0},"end":{"line":49,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":23},"end":{"line":16,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":24},"end":{"line":20,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":39},"end":{"line":19,"column":40}},"loc":{"start":{"line":19,"column":47},"end":{"line":19,"column":66}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":18},"end":{"line":23,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":28},"end":{"line":26,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":25,"column":51},"end":{"line":25,"column":52}},"loc":{"start":{"line":25,"column":59},"end":{"line":25,"column":78}},"line":25},"6":{"name":"(anonymous_6)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":15},"end":{"line":29,"column":5}},"line":27},"7":{"name":"(anonymous_7)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":11},"end":{"line":32,"column":5}},"line":30},"8":{"name":"(anonymous_8)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":31},"end":{"line":35,"column":5}},"line":33},"9":{"name":"(anonymous_9)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":41},"end":{"line":47,"column":5}},"line":36},"10":{"name":"(anonymous_10)","decl":{"start":{"line":39,"column":45},"end":{"line":39,"column":46}},"loc":{"start":{"line":39,"column":55},"end":{"line":39,"column":97}},"line":39},"11":{"name":"(anonymous_11)","decl":{"start":{"line":41,"column":50},"end":{"line":41,"column":51}},"loc":{"start":{"line":41,"column":60},"end":{"line":41,"column":96}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":15,"column":9}},{"start":{"line":10,"column":8},"end":{"line":15,"column":9}}],"line":10},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":10,"column":37}},"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":17}},{"start":{"line":10,"column":21},"end":{"line":10,"column":37}}],"line":10},"2":{"loc":{"start":{"line":33,"column":20},"end":{"line":33,"column":29}},"type":"default-arg","locations":[{"start":{"line":33,"column":27},"end":{"line":33,"column":29}}],"line":33},"3":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38},"4":{"loc":{"start":{"line":42,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":45,"column":9}},{"start":{"line":42,"column":8},"end":{"line":45,"column":9}}],"line":42}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[0,0],"1":[0,0],"2":[0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/RuleSet.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/RuleSet.ts"],"names":[],"mappings":";;;AAEA,mCAAqC;AACrC,iCAA8B;AAE9B,MAAa,OAAO;IAIlB,YAAY,KAAc;QAHlB,mBAAc,GAAW,EAAE,CAAC;QAC5B,WAAM,GAAW,EAAE,CAAC;QAG1B,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAEO,iBAAiB;QACvB,MAAM,YAAY,GAAY,CAAC,kBAAU,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,WAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC;IAEM,OAAO,CAAC,IAAW;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAEM,gBAAgB,CAAC,KAAc;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,WAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpE,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAEM,IAAI;QACT,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAEM,eAAe,CAAC,OAAe,EAAE;QACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAEM,eAAe,CAAC,OAAa,EAAE,UAAgB;QACpD,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,IAAI,IAAI,CAAC,cAAc,KAAK,EAAE,EAAE;YAC9B,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;SACxF;QAED,MAAM,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;QAC1F,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,uCAAuC;YACvC,OAAO,CAAC,IAAI,CACV,0GAA0G,CAC3G,CAAC;SACH;QAED,OAAO,cAAc,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;CACF;AArDD,0BAqDC","sourcesContent":["import { IRule } from './Interfaces';\nimport { Node } from './utils/Node';\nimport { fileImpose } from './rules';\nimport { Rule } from './Rule';\n\nexport class RuleSet {\n  private _languageLimit: string = '';\n  private _rules: Rule[] = [];\n\n  constructor(rules?: Rule[]) {\n    if (rules && rules.length > 0) {\n      this._rules = rules;\n    } else {\n      this._loadDefaultRules();\n    }\n  }\n\n  private _loadDefaultRules(): void {\n    const rulePatterns: IRule[] = [fileImpose];\n    this._rules = rulePatterns.map((rp) => new Rule(rp));\n  }\n\n  public addRule(rule: IRule): void {\n    this._rules.push(new Rule(rule));\n  }\n\n  public addMultipleRules(rules: IRule[]): void {\n    this._rules = this._rules.concat(rules.map((rp) => new Rule(rp)));\n  }\n\n  public getRules(): Rule[] {\n    return this._rules;\n  }\n\n  public copy(): RuleSet {\n    return new RuleSet(this._rules);\n  }\n\n  public limitToLanguage(lang: string = ''): void {\n    this._languageLimit = lang;\n  }\n\n  public getMatchingRule(baseFST: Node, featureFST: Node): Rule | undefined {\n    let aUsageRules = this._rules;\n    if (this._languageLimit !== '') {\n      aUsageRules = aUsageRules.filter((rule) => rule.supportsLanguage(this._languageLimit));\n    }\n\n    const resultingRules = aUsageRules.filter((rule) => rule.isMatching(baseFST, featureFST));\n    if (resultingRules.length > 1) {\n      // tslint:disable-next-line: no-console\n      console.warn(\n        'More than one rule is matching! Taking the first one to proceed. Result can differ from expected Result.',\n      );\n    }\n\n    return resultingRules[0];\n  }\n}\n"]},"all":true},"E:\\smithery-tooling\\smithery\\smithery-core\\src\\utils\\Node.ts":{"path":"E:\\smithery-tooling\\smithery\\smithery-core\\src\\utils\\Node.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":23}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":23}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":21}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":23}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":23}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":32}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":29}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":25}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":40}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":41}},"13":{"start":{"line":27,"column":22},"end":{"line":27,"column":32}},"14":{"start":{"line":28,"column":8},"end":{"line":28,"column":31}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":33}},"16":{"start":{"line":30,"column":8},"end":{"line":30,"column":29}},"17":{"start":{"line":31,"column":8},"end":{"line":31,"column":31}},"18":{"start":{"line":32,"column":8},"end":{"line":32,"column":31}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":43}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":35}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":39}},"22":{"start":{"line":36,"column":8},"end":{"line":36,"column":35}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":37}},"24":{"start":{"line":38,"column":8},"end":{"line":38,"column":45}},"25":{"start":{"line":39,"column":8},"end":{"line":41,"column":11}},"26":{"start":{"line":40,"column":12},"end":{"line":40,"column":60}},"27":{"start":{"line":42,"column":8},"end":{"line":42,"column":21}},"28":{"start":{"line":45,"column":0},"end":{"line":45,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":21},"end":{"line":19,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":26},"end":{"line":22,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":33},"end":{"line":25,"column":5}},"line":23},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":12},"end":{"line":43,"column":5}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":39,"column":45},"end":{"line":39,"column":46}},"loc":{"start":{"line":39,"column":54},"end":{"line":41,"column":9}},"line":39}},"branchMap":{},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"E:/smithery-tooling/smithery/smithery-core/src/utils/Node.ts","sources":["E:/smithery-tooling/smithery/smithery-core/src/utils/Node.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,IAAI;IAkBf,YAAY,GAAY;QAjBjB,SAAI,GAAW,EAAE,CAAC;QAClB,UAAK,GAAuB,CAAC,CAAC;QAC9B,QAAG,GAAW,CAAC,CAAC;QAEvB,6BAA6B;QACtB,SAAI,GAAW,EAAE,CAAC;QAClB,SAAI,GAAW,EAAE,CAAC;QAClB,eAAU,GAAW,EAAE,CAAC;QACxB,WAAM,GAAqB,SAAS,CAAC;QAOpC,eAAU,GAA2B,EAAE,CAAC;QAG9C,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IACnB,CAAC;IAED,YAAY,CAAC,OAAe;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,YAAY,CAAC,OAAe,EAAE,KAAkE;QAC9F,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;IACnC,CAAC;IAEM,KAAK;QACV,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAErB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC3C,KAAK,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAjDD,oBAiDC","sourcesContent":["\n\n/**\n * @todo remove later on or take it to the core implementation\n */\nexport class Node {\n  public type: string = '';\n  public start: number | undefined = 0;\n  public end: number = 0;\n\n  /*intermediate definitions */\n  public name: string = '';\n  public path: string = '';\n  public sourcePath: string = '';\n  public parent: Node | undefined = undefined;\n  public children?: Node[];\n  public ending?: string;\n  public content?: string;\n  public featureName?: string;\n  [key: string]: any;\n\n  private attributes: { [key: string]: any } = {};\n\n  constructor(pos?: number) {\n    this.start = pos;\n  }\n\n  getAttribute(attName: string): any | undefined {\n    return this.attributes[attName];\n  }\n\n  setAttribute(attName: string, value: number | string | boolean | number[] | boolean[] | string[]): void {\n    this.attributes[attName] = value;\n  }\n\n  public clone(): Node {\n    const clone = new Node();\n    clone.type = this.type;\n    clone.start = this.start;\n    clone.end = this.end;\n\n    clone.name = this.name;\n    clone.path = this.path;\n    clone.sourcePath = this.sourcePath;\n    clone.parent = this.parent;\n    clone.children = this.children;\n    clone.ending = this.ending;\n    clone.content = this.content;\n    clone.featureName = this.featureName;\n    Object.keys(this.attributes).forEach((key) => {\n      clone.setAttribute(key, this.getAttribute(key));\n    });\n    return clone;\n  }\n}"]},"all":true}}